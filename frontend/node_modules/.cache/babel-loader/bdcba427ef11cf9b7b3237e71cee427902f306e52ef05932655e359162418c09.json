{"ast":null,"code":"var _jsxFileName = \"/Users/fitzpatrickcarl/my-musical-stairs-app/src/MusicVisualiser.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Vex from 'vexflow';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MusicVisualizer() {\n  _s();\n  const [noteData, setNoteData] = useState([]);\n  useEffect(() => {\n    // Fetch note data from your database (replace with your actual API call)\n    // Example structure: { pitch: 'C4', duration: '4n' }\n    fetch('http://localhost:5000/get_note_data').then(response => response.json()).then(data => {\n      setNoteData(data);\n    }).catch(error => {\n      console.error('Error fetching note data:', error);\n    });\n  }, []);\n  useEffect(() => {\n    const VF = Vex.Flow;\n    const container = document.getElementById('visualizer-container');\n    container.innerHTML = ''; // Clear previous content\n\n    const renderer = new VF.Renderer(container, VF.Renderer.Backends.SVG);\n    const context = renderer.getContext();\n    const stave = new VF.Stave(10, 0, 400);\n    let voice;\n    if (noteData.length > 0) {\n      // Create a voice\n      voice = new VF.Voice({\n        num_beats: 4,\n        beat_value: 4\n      });\n\n      // Add notes to the voice\n      noteData.forEach(note => {\n        const staveNote = new VF.StaveNote({\n          keys: [note.pitch],\n          duration: 'q' // Adjust duration as needed\n        });\n\n        staveNote.addModifier(new VF.Annotation(note.pitch).setVerticalJustification(VF.Annotation.VerticalJustify.BOTTOM));\n        voice.addTickable(staveNote);\n      });\n    }\n\n    // Format and draw only if the voice is complete\n    if (voice) {\n      voice.afterTick(() => {\n        new VF.Formatter().joinVoices([voice]).format([voice], 400);\n        stave.setContext(context).draw();\n        voice.draw(context, stave);\n      });\n    }\n  }, [noteData]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Music Visualizer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"visualizer-container\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n_s(MusicVisualizer, \"kFbI/fFNJdhEvBWyFfW6ZkH3ahs=\");\n_c = MusicVisualizer;\nexport default MusicVisualizer;\nvar _c;\n$RefreshReg$(_c, \"MusicVisualizer\");","map":{"version":3,"names":["React","useEffect","useState","Vex","jsxDEV","_jsxDEV","MusicVisualizer","_s","noteData","setNoteData","fetch","then","response","json","data","catch","error","console","VF","Flow","container","document","getElementById","innerHTML","renderer","Renderer","Backends","SVG","context","getContext","stave","Stave","voice","length","Voice","num_beats","beat_value","forEach","note","staveNote","StaveNote","keys","pitch","duration","addModifier","Annotation","setVerticalJustification","VerticalJustify","BOTTOM","addTickable","afterTick","Formatter","joinVoices","format","setContext","draw","children","fileName","_jsxFileName","lineNumber","columnNumber","id","_c","$RefreshReg$"],"sources":["/Users/fitzpatrickcarl/my-musical-stairs-app/src/MusicVisualiser.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Vex from 'vexflow';\n\nfunction MusicVisualizer() {\n  const [noteData, setNoteData] = useState([]);\n\n  useEffect(() => {\n    // Fetch note data from your database (replace with your actual API call)\n    // Example structure: { pitch: 'C4', duration: '4n' }\n    fetch('http://localhost:5000/get_note_data')\n      .then((response) => response.json())\n      .then((data) => {\n        setNoteData(data);\n      })\n      .catch((error) => {\n        console.error('Error fetching note data:', error);\n      });\n  }, []);\n\n  useEffect(() => {\n    const VF = Vex.Flow;\n    const container = document.getElementById('visualizer-container');\n    container.innerHTML = ''; // Clear previous content\n\n    const renderer = new VF.Renderer(container, VF.Renderer.Backends.SVG);\n    const context = renderer.getContext();\n    const stave = new VF.Stave(10, 0, 400);\n\n    let voice;\n    if (noteData.length > 0) {\n      // Create a voice\n      voice = new VF.Voice({ num_beats: 4, beat_value: 4 });\n\n      // Add notes to the voice\n      noteData.forEach((note) => {\n        const staveNote = new VF.StaveNote({\n          keys: [note.pitch],\n          duration: 'q', // Adjust duration as needed\n        });\n        staveNote.addModifier(new VF.Annotation(note.pitch).setVerticalJustification(VF.Annotation.VerticalJustify.BOTTOM));\n        voice.addTickable(staveNote);\n      });\n    }\n\n    // Format and draw only if the voice is complete\n    if (voice) {\n      voice.afterTick(() => {\n        new VF.Formatter().joinVoices([voice]).format([voice], 400);\n        stave.setContext(context).draw();\n        voice.draw(context, stave);\n      });\n    }\n\n  }, [noteData]);\n\n  return (\n    <div>\n      <h1>Music Visualizer</h1>\n      <div id=\"visualizer-container\"></div>\n    </div>\n  );\n}\n\nexport default MusicVisualizer;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,GAAG,MAAM,SAAS;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,eAAeA,CAAA,EAAG;EAAAC,EAAA;EACzB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAE5CD,SAAS,CAAC,MAAM;IACd;IACA;IACAS,KAAK,CAAC,qCAAqC,CAAC,CACzCC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAK;MACdL,WAAW,CAACK,IAAI,CAAC;IACnB,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;MAChBC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;IACnD,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAENf,SAAS,CAAC,MAAM;IACd,MAAMiB,EAAE,GAAGf,GAAG,CAACgB,IAAI;IACnB,MAAMC,SAAS,GAAGC,QAAQ,CAACC,cAAc,CAAC,sBAAsB,CAAC;IACjEF,SAAS,CAACG,SAAS,GAAG,EAAE,CAAC,CAAC;;IAE1B,MAAMC,QAAQ,GAAG,IAAIN,EAAE,CAACO,QAAQ,CAACL,SAAS,EAAEF,EAAE,CAACO,QAAQ,CAACC,QAAQ,CAACC,GAAG,CAAC;IACrE,MAAMC,OAAO,GAAGJ,QAAQ,CAACK,UAAU,CAAC,CAAC;IACrC,MAAMC,KAAK,GAAG,IAAIZ,EAAE,CAACa,KAAK,CAAC,EAAE,EAAE,CAAC,EAAE,GAAG,CAAC;IAEtC,IAAIC,KAAK;IACT,IAAIxB,QAAQ,CAACyB,MAAM,GAAG,CAAC,EAAE;MACvB;MACAD,KAAK,GAAG,IAAId,EAAE,CAACgB,KAAK,CAAC;QAAEC,SAAS,EAAE,CAAC;QAAEC,UAAU,EAAE;MAAE,CAAC,CAAC;;MAErD;MACA5B,QAAQ,CAAC6B,OAAO,CAAEC,IAAI,IAAK;QACzB,MAAMC,SAAS,GAAG,IAAIrB,EAAE,CAACsB,SAAS,CAAC;UACjCC,IAAI,EAAE,CAACH,IAAI,CAACI,KAAK,CAAC;UAClBC,QAAQ,EAAE,GAAG,CAAE;QACjB,CAAC,CAAC;;QACFJ,SAAS,CAACK,WAAW,CAAC,IAAI1B,EAAE,CAAC2B,UAAU,CAACP,IAAI,CAACI,KAAK,CAAC,CAACI,wBAAwB,CAAC5B,EAAE,CAAC2B,UAAU,CAACE,eAAe,CAACC,MAAM,CAAC,CAAC;QACnHhB,KAAK,CAACiB,WAAW,CAACV,SAAS,CAAC;MAC9B,CAAC,CAAC;IACJ;;IAEA;IACA,IAAIP,KAAK,EAAE;MACTA,KAAK,CAACkB,SAAS,CAAC,MAAM;QACpB,IAAIhC,EAAE,CAACiC,SAAS,CAAC,CAAC,CAACC,UAAU,CAAC,CAACpB,KAAK,CAAC,CAAC,CAACqB,MAAM,CAAC,CAACrB,KAAK,CAAC,EAAE,GAAG,CAAC;QAC3DF,KAAK,CAACwB,UAAU,CAAC1B,OAAO,CAAC,CAAC2B,IAAI,CAAC,CAAC;QAChCvB,KAAK,CAACuB,IAAI,CAAC3B,OAAO,EAAEE,KAAK,CAAC;MAC5B,CAAC,CAAC;IACJ;EAEF,CAAC,EAAE,CAACtB,QAAQ,CAAC,CAAC;EAEd,oBACEH,OAAA;IAAAmD,QAAA,gBACEnD,OAAA;MAAAmD,QAAA,EAAI;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACzBvD,OAAA;MAAKwD,EAAE,EAAC;IAAsB;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClC,CAAC;AAEV;AAACrD,EAAA,CA1DQD,eAAe;AAAAwD,EAAA,GAAfxD,eAAe;AA4DxB,eAAeA,eAAe;AAAC,IAAAwD,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}