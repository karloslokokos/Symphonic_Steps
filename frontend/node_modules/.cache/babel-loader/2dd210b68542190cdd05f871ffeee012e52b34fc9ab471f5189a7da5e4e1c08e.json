{"ast":null,"code":"var _jsxFileName = \"/Users/fitzpatrickcarl/my-musical-stairs-app/src/Score.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect } from 'react';\nimport VexFlow from 'vexflow';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VF = VexFlow.Flow;\nconst {\n  Formatter,\n  Renderer,\n  Stave,\n  StaveNote\n} = VF;\nconst clefAndTimeWidth = 60;\nconst notesDuration = 'q'; // Default duration for all notes\n\nexport function Score({\n  staves = [],\n  clef = 'treble',\n  timeSignature = '4/4',\n  width = 500,\n  height = 150\n}) {\n  _s();\n  const container = useRef();\n  const rendererRef = useRef();\n  useEffect(() => {\n    if (rendererRef.current == null) {\n      rendererRef.current = new Renderer(container.current, Renderer.Backends.SVG);\n    }\n    const renderer = rendererRef.current;\n    renderer.resize(width, height);\n    const context = renderer.getContext();\n    context.setFont('Arial', 10, '').setBackgroundFillStyle('#eed');\n    const staveWidth = (width - clefAndTimeWidth) / staves.length;\n    let currX = 0;\n    let currStave;\n    staves.forEach((notes, i) => {\n      if (i % 8 === 0) {\n        currX = i === 0 ? 0 : clefAndTimeWidth;\n        currStave = new Stave(currX, 0, staveWidth);\n        if (i === 0) {\n          currStave.setWidth(staveWidth + clefAndTimeWidth);\n          currStave.addClef(clef).addTimeSignature(timeSignature);\n        }\n        currStave.setContext(context).draw();\n      }\n      const processedNotes = notes.map(key => new StaveNote({\n        keys: [key],\n        duration: notesDuration\n      }));\n      Formatter.FormatAndDraw(context, currStave, processedNotes, {\n        auto_beam: true\n      });\n      currX += staveWidth;\n    });\n  }, [staves, clef, timeSignature, width, height]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: container\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 10\n  }, this);\n}\n_s(Score, \"Oo94nw6YKmif0GbcQr28f6bFgJU=\");\n_c = Score;\nvar _c;\n$RefreshReg$(_c, \"Score\");","map":{"version":3,"names":["React","useRef","useEffect","VexFlow","jsxDEV","_jsxDEV","VF","Flow","Formatter","Renderer","Stave","StaveNote","clefAndTimeWidth","notesDuration","Score","staves","clef","timeSignature","width","height","_s","container","rendererRef","current","Backends","SVG","renderer","resize","context","getContext","setFont","setBackgroundFillStyle","staveWidth","length","currX","currStave","forEach","notes","i","setWidth","addClef","addTimeSignature","setContext","draw","processedNotes","map","key","keys","duration","FormatAndDraw","auto_beam","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/fitzpatrickcarl/my-musical-stairs-app/src/Score.js"],"sourcesContent":["import React, { useRef, useEffect } from 'react';\nimport VexFlow from 'vexflow';\n\nconst VF = VexFlow.Flow;\nconst { Formatter, Renderer, Stave, StaveNote } = VF;\n\nconst clefAndTimeWidth = 60;\nconst notesDuration = 'q'; // Default duration for all notes\n\nexport function Score({\n  staves = [],\n  clef = 'treble',\n  timeSignature = '4/4',\n  width = 500,\n  height = 150,\n}) {\n  const container = useRef();\n  const rendererRef = useRef();\n\n  useEffect(() => {\n    if (rendererRef.current == null) {\n      rendererRef.current = new Renderer(\n        container.current,\n        Renderer.Backends.SVG\n      );\n    }\n\n    const renderer = rendererRef.current;\n    renderer.resize(width, height);\n    const context = renderer.getContext();\n    context.setFont('Arial', 10, '').setBackgroundFillStyle('#eed');\n    const staveWidth = (width - clefAndTimeWidth) / staves.length;\n\n    let currX = 0;\n    let currStave;\n\n    staves.forEach((notes, i) => {\n      if (i % 8 === 0) {\n        currX = i === 0 ? 0 : clefAndTimeWidth;\n        currStave = new Stave(currX, 0, staveWidth);\n\n        if (i === 0) {\n          currStave.setWidth(staveWidth + clefAndTimeWidth);\n          currStave.addClef(clef).addTimeSignature(timeSignature);\n        }\n\n        currStave.setContext(context).draw();\n      }\n\n      const processedNotes = notes.map(\n        (key) => new StaveNote({\n          keys: [key],\n          duration: notesDuration,\n        })\n      );\n\n      Formatter.FormatAndDraw(context, currStave, processedNotes, {\n        auto_beam: true,\n      });\n\n      currX += staveWidth;\n    });\n  }, [staves, clef, timeSignature, width, height]);\n\n  return <div ref={container} />;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}