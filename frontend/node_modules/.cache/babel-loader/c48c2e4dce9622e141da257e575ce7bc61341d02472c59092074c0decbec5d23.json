{"ast":null,"code":"var _jsxFileName = \"/Users/fitzpatrickcarl/my-musical-stairs-app/src/Score.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect } from 'react';\nimport VexFlow from 'vexflow';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VF = VexFlow.Flow;\nconst {\n  Formatter,\n  Renderer,\n  Stave,\n  StaveNote\n} = VF;\nconst clefAndTimeWidth = 60;\nexport function Score({\n  clef = 'treble',\n  timeSignature = '4/4',\n  width = 500,\n  height = 150\n}) {\n  _s();\n  const container = useRef();\n  const rendererRef = useRef();\n  useEffect(() => {\n    // Fetch note data from your API\n    axios.get('http://localhost:5000/get_note_data').then(response => {\n      var _response$data;\n      const notes = (response === null || response === void 0 ? void 0 : (_response$data = response.data) === null || _response$data === void 0 ? void 0 : _response$data.notes) || []; // Ensure notes is an array\n      renderStaves([notes]); // Wrap notes in an array\n    }).catch(error => {\n      console.error('Error fetching note data:', error);\n    });\n  }, []);\n  const renderStaves = staves => {\n    if (rendererRef.current == null) {\n      rendererRef.current = new Renderer(container.current, Renderer.Backends.SVG);\n    }\n    const renderer = rendererRef.current;\n    renderer.resize(width, height);\n    const context = renderer.getContext();\n    context.setFont('Arial', 10, '').setBackgroundFillStyle('#eed');\n    const staveWidth = (width - clefAndTimeWidth) / staves.length;\n    let currX = 0;\n    staves.forEach((notes, i) => {\n      const stave = new Stave(currX, 0, staveWidth);\n      if (i === 0) {\n        stave.setWidth(staveWidth + clefAndTimeWidth);\n        stave.addClef(clef).addTimeSignature(timeSignature);\n      }\n      currX += stave.getWidth();\n      stave.setContext(context).draw();\n      const processedNotes = notes.map(note => typeof note === 'string' ? {\n        key: note\n      } : note).map(note => Array.isArray(note) ? {\n        key: note[0],\n        duration: note[1]\n      } : note).map(({\n        key,\n        ...rest\n      }) => typeof key === 'string' ? {\n        key: key.includes('/') ? key : `${key[0]}/${key.slice(1)}`,\n        ...rest\n      } : rest).map(({\n        key,\n        keys,\n        duration = 'q'\n      }) => new StaveNote({\n        keys: key ? [key] : keys,\n        duration: String(duration)\n      }));\n      Formatter.FormatAndDraw(context, stave, processedNotes, {\n        auto_beam: true\n      });\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: container\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 10\n  }, this);\n}\n_s(Score, \"Oo94nw6YKmif0GbcQr28f6bFgJU=\");\n_c = Score;\nvar _c;\n$RefreshReg$(_c, \"Score\");","map":{"version":3,"names":["React","useRef","useEffect","VexFlow","axios","jsxDEV","_jsxDEV","VF","Flow","Formatter","Renderer","Stave","StaveNote","clefAndTimeWidth","Score","clef","timeSignature","width","height","_s","container","rendererRef","get","then","response","_response$data","notes","data","renderStaves","catch","error","console","staves","current","Backends","SVG","renderer","resize","context","getContext","setFont","setBackgroundFillStyle","staveWidth","length","currX","forEach","i","stave","setWidth","addClef","addTimeSignature","getWidth","setContext","draw","processedNotes","map","note","key","Array","isArray","duration","rest","includes","slice","keys","String","FormatAndDraw","auto_beam","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/fitzpatrickcarl/my-musical-stairs-app/src/Score.js"],"sourcesContent":["import React, { useRef, useEffect } from 'react';\nimport VexFlow from 'vexflow';\nimport axios from 'axios';\n\nconst VF = VexFlow.Flow;\nconst { Formatter, Renderer, Stave, StaveNote } = VF;\n\nconst clefAndTimeWidth = 60;\n\nexport function Score({\n  clef = 'treble',\n  timeSignature = '4/4',\n  width = 500,\n  height = 150,\n}) {\n  const container = useRef();\n  const rendererRef = useRef();\n\n  useEffect(() => {\n    // Fetch note data from your API\n    axios.get('http://localhost:5000/get_note_data')\n      .then(response => {\n        const notes = response?.data?.notes || []; // Ensure notes is an array\n        renderStaves([notes]); // Wrap notes in an array\n      })\n      .catch(error => {\n        console.error('Error fetching note data:', error);\n      });\n  }, []);\n\n  const renderStaves = (staves) => {\n    if (rendererRef.current == null) {\n      rendererRef.current = new Renderer(container.current, Renderer.Backends.SVG);\n    }\n    const renderer = rendererRef.current;\n    renderer.resize(width, height);\n    const context = renderer.getContext();\n    context.setFont('Arial', 10, '').setBackgroundFillStyle('#eed');\n    const staveWidth = (width - clefAndTimeWidth) / staves.length;\n\n    let currX = 0;\n    staves.forEach((notes, i) => {\n      const stave = new Stave(currX, 0, staveWidth);\n      if (i === 0) {\n        stave.setWidth(staveWidth + clefAndTimeWidth);\n        stave.addClef(clef).addTimeSignature(timeSignature);\n      }\n      currX += stave.getWidth();\n      stave.setContext(context).draw();\n\n      const processedNotes = notes\n        .map(note => (typeof note === 'string' ? { key: note } : note))\n        .map(note =>\n          Array.isArray(note) ? { key: note[0], duration: note[1] } : note\n        )\n        .map(({ key, ...rest }) =>\n          typeof key === 'string'\n            ? {\n                key: key.includes('/') ? key : `${key[0]}/${key.slice(1)}`,\n                ...rest,\n              }\n            : rest\n        )\n        .map(\n          ({ key, keys, duration = 'q' }) =>\n            new StaveNote({\n              keys: key ? [key] : keys,\n              duration: String(duration),\n            })\n        );\n      Formatter.FormatAndDraw(context, stave, processedNotes, {\n        auto_beam: true,\n      });\n    });\n  };\n\n  return <div ref={container} />;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}