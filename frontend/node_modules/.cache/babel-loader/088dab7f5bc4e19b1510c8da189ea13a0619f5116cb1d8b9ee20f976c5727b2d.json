{"ast":null,"code":"var _jsxFileName = \"/Users/fitzpatrickcarl/Documents/project-root/frontend/src/Components/TheoryTrainer.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport BsNav from '../Containers/BsNav';\nimport '../styles/MusicalStairsGame.css'; // Make sure to style your component for GoDaddy-like aesthetics\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst MusicalStairsGame = () => {\n  _s();\n  const allTasks = [{\n    name: 'Perfect 5th',\n    notes: ['C4', 'G4']\n  }, {\n    name: 'Major 3rd',\n    notes: ['C4', 'E4']\n  }, {\n    name: 'Perfect 4th',\n    notes: ['C4', 'F4']\n  }, {\n    name: 'Major 2nd',\n    notes: ['C4', 'D4']\n  }];\n  const [completedTasks, setCompletedTasks] = useState([]);\n  const [currentTask, setCurrentTask] = useState({});\n  const [score, setScore] = useState(0);\n  const [gameOver, setGameOver] = useState(false);\n  useEffect(() => {\n    generateRandomTask();\n  }, []);\n  const generateRandomTask = () => {\n    let remainingTasks = allTasks.filter(task => !completedTasks.includes(task.name));\n    if (remainingTasks.length === 0) {\n      setGameOver(true);\n      return;\n    }\n    const randomIndex = Math.floor(Math.random() * remainingTasks.length);\n    setCurrentTask(remainingTasks[randomIndex]);\n  };\n  const validateTask = async () => {\n    try {\n      const response = await axios.get('http://localhost:5000/get_note_data', {\n        params: {\n          limit: 2\n        }\n      });\n      const fetchedNotes = response.data.notes; // Assume this API returns an object with a notes array\n\n      const isValid = currentTask.notes.every(note => fetchedNotes.includes(note));\n      if (isValid) {\n        alert(\"Correct! Moving to the next task.\");\n        setScore(score + 1);\n        setCompletedTasks([...completedTasks, currentTask.name]);\n      } else {\n        alert(\"Incorrect. Try the next task.\");\n      }\n      generateRandomTask();\n    } catch (error) {\n      console.error(\"Error fetching note data:\", error);\n    }\n  };\n  const resetGame = () => {\n    setCompletedTasks([]);\n    setScore(0);\n    setGameOver(false);\n    generateRandomTask();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"musical-stairs-game\",\n    children: [/*#__PURE__*/_jsxDEV(BsNav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Play the Musical Stairs Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), !gameOver ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Play the following chord or interval on the stairs: \", currentTask.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: validateTask,\n        children: \"Validate Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Game Over! Your score: \", score, \" out of \", allTasks.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: resetGame,\n        children: \"Restart Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Score: \", score]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n_s(MusicalStairsGame, \"7hSJsVUzjL/YSi2GxK6IsBVDAs8=\");\n_c = MusicalStairsGame;\nexport default MusicalStairsGame;\nvar _c;\n$RefreshReg$(_c, \"MusicalStairsGame\");","map":{"version":3,"names":["React","useState","useEffect","axios","BsNav","jsxDEV","_jsxDEV","Fragment","_Fragment","MusicalStairsGame","_s","allTasks","name","notes","completedTasks","setCompletedTasks","currentTask","setCurrentTask","score","setScore","gameOver","setGameOver","generateRandomTask","remainingTasks","filter","task","includes","length","randomIndex","Math","floor","random","validateTask","response","get","params","limit","fetchedNotes","data","isValid","every","note","alert","error","console","resetGame","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/fitzpatrickcarl/Documents/project-root/frontend/src/Components/TheoryTrainer.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport BsNav from '../Containers/BsNav';\nimport '../styles/MusicalStairsGame.css'; // Make sure to style your component for GoDaddy-like aesthetics\n\nconst MusicalStairsGame = () => {\n  const allTasks = [\n    { name: 'Perfect 5th', notes: ['C4', 'G4'] },\n    { name: 'Major 3rd', notes: ['C4', 'E4'] },\n    { name: 'Perfect 4th', notes: ['C4', 'F4'] },\n    { name: 'Major 2nd', notes: ['C4', 'D4'] },\n  ];\n\n  const [completedTasks, setCompletedTasks] = useState([]);\n  const [currentTask, setCurrentTask] = useState({});\n  const [score, setScore] = useState(0);\n  const [gameOver, setGameOver] = useState(false);\n\n  useEffect(() => {\n    generateRandomTask();\n  }, []);\n\n  const generateRandomTask = () => {\n    let remainingTasks = allTasks.filter(task => !completedTasks.includes(task.name));\n\n    if (remainingTasks.length === 0) {\n      setGameOver(true);\n      return;\n    }\n\n    const randomIndex = Math.floor(Math.random() * remainingTasks.length);\n    setCurrentTask(remainingTasks[randomIndex]);\n  };\n\n  const validateTask = async () => {\n    try {\n      const response = await axios.get('http://localhost:5000/get_note_data', {\n        params: { limit: 2 } \n      });\n      const fetchedNotes = response.data.notes; // Assume this API returns an object with a notes array\n\n      const isValid = currentTask.notes.every(note => fetchedNotes.includes(note));\n\n      if (isValid) {\n        alert(\"Correct! Moving to the next task.\");\n        setScore(score + 1);\n        setCompletedTasks([...completedTasks, currentTask.name]);\n      } else {\n        alert(\"Incorrect. Try the next task.\");\n      }\n      generateRandomTask();\n    } catch (error) {\n      console.error(\"Error fetching note data:\", error);\n    }\n  };\n\n  const resetGame = () => {\n    setCompletedTasks([]);\n    setScore(0);\n    setGameOver(false);\n    generateRandomTask();\n  };\n\n  return (\n    <div className=\"musical-stairs-game\">\n      <BsNav />\n      <h1>Play the Musical Stairs Game</h1>\n      {!gameOver ? (\n        <>\n          <p>Play the following chord or interval on the stairs: {currentTask.name}</p>\n          <button onClick={validateTask}>Validate Task</button>\n        </>\n      ) : (\n        <>\n          <p>Game Over! Your score: {score} out of {allTasks.length}</p>\n          <button onClick={resetGame}>Restart Game</button>\n        </>\n      )}\n      <p>Score: {score}</p>\n    </div>\n  );\n};\n\nexport default MusicalStairsGame;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}