{"ast":null,"code":"var _jsxFileName = \"/Users/fitzpatrickcarl/my-musical-stairs-app/src/Score.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect } from 'react';\nimport VexFlow from 'vexflow';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VF = VexFlow.Flow;\nconst {\n  Formatter,\n  Renderer,\n  Stave,\n  StaveNote\n} = VF;\nconst clefAndTimeWidth = 60;\nconst notesDuration = 'q'; // Default duration for all notes\n\nexport function Score({\n  staves = [],\n  clef = 'treble',\n  timeSignature = '4/4',\n  width = 500,\n  height = 150\n}) {\n  _s();\n  const container = useRef();\n  const rendererRef = useRef();\n  useEffect(() => {\n    if (rendererRef.current == null) {\n      rendererRef.current = new Renderer(container.current, Renderer.Backends.SVG);\n    }\n    const renderer = rendererRef.current;\n    renderer.resize(width, height);\n    const context = renderer.getContext();\n    context.setFont('Arial', 10, '').setBackgroundFillStyle('#eed');\n    let currX = 0;\n    const staveWidth = width - clefAndTimeWidth;\n    staves.forEach((notes, index) => {\n      const stave = new Stave(currX, 0, staveWidth);\n      stave.setContext(context);\n      if (index % 2 === 0) {\n        stave.addClef(clef);\n        stave.addTimeSignature(timeSignature);\n      }\n      const processedNotes = notes.map(pitch => {\n        const [note, octave] = pitch.match(/[a-zA-Z]+|[0-9]+/g);\n        return new StaveNote({\n          keys: [`${note}/${octave}`],\n          duration: notesDuration\n        });\n      });\n      stave.setContext(context).draw();\n      Formatter.FormatAndDraw(context, stave, processedNotes, {\n        auto_beam: true\n      });\n      currX += staveWidth;\n      if (currX + staveWidth > width) {\n        // Start a new line\n        currX = 0;\n      }\n    });\n  }, [staves, clef, timeSignature, width]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: container\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 10\n  }, this);\n}\n_s(Score, \"Oo94nw6YKmif0GbcQr28f6bFgJU=\");\n_c = Score;\nvar _c;\n$RefreshReg$(_c, \"Score\");","map":{"version":3,"names":["React","useRef","useEffect","VexFlow","jsxDEV","_jsxDEV","VF","Flow","Formatter","Renderer","Stave","StaveNote","clefAndTimeWidth","notesDuration","Score","staves","clef","timeSignature","width","height","_s","container","rendererRef","current","Backends","SVG","renderer","resize","context","getContext","setFont","setBackgroundFillStyle","currX","staveWidth","forEach","notes","index","stave","setContext","addClef","addTimeSignature","processedNotes","map","pitch","note","octave","match","keys","duration","draw","FormatAndDraw","auto_beam","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/fitzpatrickcarl/my-musical-stairs-app/src/Score.js"],"sourcesContent":["import React, { useRef, useEffect } from 'react';\nimport VexFlow from 'vexflow';\n\nconst VF = VexFlow.Flow;\nconst { Formatter, Renderer, Stave, StaveNote } = VF;\n\nconst clefAndTimeWidth = 60;\nconst notesDuration = 'q'; // Default duration for all notes\n\nexport function Score({\n  staves = [],\n  clef = 'treble',\n  timeSignature = '4/4',\n  width = 500,\n  height = 150,\n}) {\n  const container = useRef();\n  const rendererRef = useRef();\n\n  useEffect(() => {\n    if (rendererRef.current == null) {\n      rendererRef.current = new Renderer(container.current, Renderer.Backends.SVG);\n    }\n\n    const renderer = rendererRef.current;\n    renderer.resize(width, height);\n    const context = renderer.getContext();\n    context.setFont('Arial', 10, '').setBackgroundFillStyle('#eed');\n\n    let currX = 0;\n    const staveWidth = width - clefAndTimeWidth;\n\n    staves.forEach((notes, index) => {\n      const stave = new Stave(currX, 0, staveWidth);\n      stave.setContext(context);\n\n      if (index % 2 === 0) {\n        stave.addClef(clef);\n        stave.addTimeSignature(timeSignature);\n      }\n\n      const processedNotes = notes.map((pitch) => {\n        const [note, octave] = pitch.match(/[a-zA-Z]+|[0-9]+/g);\n        return new StaveNote({\n          keys: [`${note}/${octave}`],\n          duration: notesDuration,\n        });\n      });\n\n      stave.setContext(context).draw();\n      Formatter.FormatAndDraw(context, stave, processedNotes, {\n        auto_beam: true,\n      });\n\n      currX += staveWidth;\n\n      if (currX + staveWidth > width) {\n        // Start a new line\n        currX = 0;\n      }\n    });\n  }, [staves, clef, timeSignature, width]);\n\n  return <div ref={container} />;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}