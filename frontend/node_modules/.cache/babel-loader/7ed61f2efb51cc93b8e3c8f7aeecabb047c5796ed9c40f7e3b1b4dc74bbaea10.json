{"ast":null,"code":"var _jsxFileName = \"/Users/fitzpatrickcarl/my-musical-stairs-app/src/MusicVisualiser.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Vex from 'vexflow';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MusicVisualizer() {\n  _s();\n  const [noteData, setNoteData] = useState([]);\n  useEffect(() => {\n    // Fetch note data from your database (replace with your actual API call)\n    // Example structure: { pitch: 'C4', duration: '4n' }\n    fetch('http://localhost:5000/get_note_data').then(response => response.json()).then(data => {\n      setNoteData(data);\n    }).catch(error => {\n      console.error('Error fetching note data:', error);\n    });\n  }, []);\n  useEffect(() => {\n    // ... (existing code)\n\n    if (noteData.length > 0) {\n      // Create a voice\n      const voice = new VF.Voice({\n        num_beats: 4,\n        beat_value: 4\n      });\n\n      // Add notes to the voice\n      noteData.forEach(note => {\n        console.log('Processing note:', note);\n        if (note && note.pitch) {\n          console.log('Adding note to voice:', note.pitch);\n          const staveNote = new VF.StaveNote({\n            keys: [note.pitch],\n            duration: 'q' // Adjust duration as needed\n          });\n\n          staveNote.addModifier(new VF.Annotation(note.pitch).setVerticalJustification(VF.Annotation.VerticalJustify.BOTTOM));\n          voice.addTickable(staveNote);\n        } else {\n          console.warn('Skipping invalid note:', note);\n        }\n      });\n\n      // Format and draw only if the voice is complete\n      if (voice) {\n        voice.afterTick(() => {\n          new VF.Formatter().joinVoices([voice]).format([voice], 400);\n          stave.setContext(context).draw();\n          voice.draw(context, stave);\n        });\n      }\n    }\n  }, [noteData]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Music Visualizer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"visualizer-container\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n_s(MusicVisualizer, \"kFbI/fFNJdhEvBWyFfW6ZkH3ahs=\");\n_c = MusicVisualizer;\nexport default MusicVisualizer;\nvar _c;\n$RefreshReg$(_c, \"MusicVisualizer\");","map":{"version":3,"names":["React","useEffect","useState","Vex","jsxDEV","_jsxDEV","MusicVisualizer","_s","noteData","setNoteData","fetch","then","response","json","data","catch","error","console","length","voice","VF","Voice","num_beats","beat_value","forEach","note","log","pitch","staveNote","StaveNote","keys","duration","addModifier","Annotation","setVerticalJustification","VerticalJustify","BOTTOM","addTickable","warn","afterTick","Formatter","joinVoices","format","stave","setContext","context","draw","children","fileName","_jsxFileName","lineNumber","columnNumber","id","_c","$RefreshReg$"],"sources":["/Users/fitzpatrickcarl/my-musical-stairs-app/src/MusicVisualiser.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Vex from 'vexflow';\n\nfunction MusicVisualizer() {\n  const [noteData, setNoteData] = useState([]);\n\n  useEffect(() => {\n    // Fetch note data from your database (replace with your actual API call)\n    // Example structure: { pitch: 'C4', duration: '4n' }\n    fetch('http://localhost:5000/get_note_data')\n      .then((response) => response.json())\n      .then((data) => {\n        setNoteData(data);\n      })\n      .catch((error) => {\n        console.error('Error fetching note data:', error);\n      });\n  }, []);\n\n  useEffect(() => {\n    // ... (existing code)\n  \n    if (noteData.length > 0) {\n      // Create a voice\n      const voice = new VF.Voice({ num_beats: 4, beat_value: 4 });\n  \n      // Add notes to the voice\n      noteData.forEach((note) => {\n        console.log('Processing note:', note);\n  \n        if (note && note.pitch) {\n          console.log('Adding note to voice:', note.pitch);\n          const staveNote = new VF.StaveNote({\n            keys: [note.pitch],\n            duration: 'q', // Adjust duration as needed\n          });\n  \n          staveNote.addModifier(new VF.Annotation(note.pitch).setVerticalJustification(VF.Annotation.VerticalJustify.BOTTOM));\n          voice.addTickable(staveNote);\n        } else {\n          console.warn('Skipping invalid note:', note);\n        }\n      });\n  \n      // Format and draw only if the voice is complete\n      if (voice) {\n        voice.afterTick(() => {\n          new VF.Formatter().joinVoices([voice]).format([voice], 400);\n          stave.setContext(context).draw();\n          voice.draw(context, stave);\n        });\n      }\n    }\n  }, [noteData]);\n  \n\n  return (\n    <div>\n      <h1>Music Visualizer</h1>\n      <div id=\"visualizer-container\"></div>\n    </div>\n  );\n}\n\nexport default MusicVisualizer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}