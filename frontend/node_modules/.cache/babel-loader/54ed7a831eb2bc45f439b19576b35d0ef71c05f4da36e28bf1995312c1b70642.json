{"ast":null,"code":"var _jsxFileName = \"/Users/fitzpatrickcarl/Documents/project-root/frontend/src/Components/MusicVisualiser.js\",\n  _s2 = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { useWebSocket } from './WebSocketContext'; // Make sure you have this context set up properly\nimport { Score } from './Score';\nimport BsNav from '../Containers/BsNav';\nimport '../styles/MusicVisualiser.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MusicVisualiser = () => {\n  _s2();\n  var _s = $RefreshSig$();\n  const [noteData, setNoteData] = useState([]);\n  const apiUrl = process.env.REACT_APP_API_BASE_URL; // Make sure this is set in your .env file\n\n  // Function to fetch note data\n  const fetchNotes = async () => {\n    try {\n      const response = await axios.get(`${apiUrl}/get_note_data?limit=16`);\n      setNoteData(response.data);\n      console.log('Note data fetched:', response.data);\n    } catch (error) {\n      console.error('Error fetching note data:', error);\n    }\n  };\n\n  // Setup WebSocket connection and event listeners\n  _s(useEffect(_s(() => {\n    _s();\n    const {\n      socket\n    } = useWebSocket(); // Assuming useWebSocket() returns your socket instance\n\n    // Function to handle incoming WebSocket messages\n    const handleWebSocketMessage = message => {\n      if (message.type === 'data_update') {\n        window.location.reload(); // Reload the page to simulate a full refresh\n      }\n    };\n\n    socket.on('message', handleWebSocketMessage);\n\n    // Initial fetch of note data\n    fetchNotes();\n\n    // Cleanup function to remove the event listener\n    return () => {\n      socket.off('message', handleWebSocketMessage);\n    };\n  }, \"DLha8bUuu79j1B/zFYp6ATFO544=\", false, function () {\n    return [useWebSocket];\n  }), [apiUrl]), \"DLha8bUuu79j1B/zFYp6ATFO544=\", false, function () {\n    return [useWebSocket];\n  }); // Dependencies array, re-run if apiUrl changes\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"MainPage-page\",\n    children: [/*#__PURE__*/_jsxDEV(BsNav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"centered-content\",\n      children: /*#__PURE__*/_jsxDEV(Score, {\n        className: \"Score\",\n        staves: noteData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s2(MusicVisualiser, \"A9SqIwvYJAQmbQJuylu2O/Ct1EY=\");\n_c = MusicVisualiser;\nexport default MusicVisualiser;\nvar _c;\n$RefreshReg$(_c, \"MusicVisualiser\");","map":{"version":3,"names":["React","useEffect","useState","axios","useWebSocket","Score","BsNav","jsxDEV","_jsxDEV","MusicVisualiser","_s2","_s","$RefreshSig$","noteData","setNoteData","apiUrl","process","env","REACT_APP_API_BASE_URL","fetchNotes","response","get","data","console","log","error","socket","handleWebSocketMessage","message","type","window","location","reload","on","off","className","children","fileName","_jsxFileName","lineNumber","columnNumber","staves","_c","$RefreshReg$"],"sources":["/Users/fitzpatrickcarl/Documents/project-root/frontend/src/Components/MusicVisualiser.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { useWebSocket } from './WebSocketContext'; // Make sure you have this context set up properly\nimport { Score } from './Score';\nimport BsNav from '../Containers/BsNav';\nimport '../styles/MusicVisualiser.css';\n\nconst MusicVisualiser = () => {\n  const [noteData, setNoteData] = useState([]);\n  const apiUrl = process.env.REACT_APP_API_BASE_URL; // Make sure this is set in your .env file\n\n  // Function to fetch note data\n  const fetchNotes = async () => {\n    try {\n      const response = await axios.get(`${apiUrl}/get_note_data?limit=16`);\n      setNoteData(response.data);\n      console.log('Note data fetched:', response.data);\n    } catch (error) {\n      console.error('Error fetching note data:', error);\n    }\n  };\n\n  // Setup WebSocket connection and event listeners\n  useEffect(() => {\n    const { socket } = useWebSocket(); // Assuming useWebSocket() returns your socket instance\n\n    // Function to handle incoming WebSocket messages\n    const handleWebSocketMessage = (message) => {\n      if (message.type === 'data_update') {\n        window.location.reload(); // Reload the page to simulate a full refresh\n      }\n    };\n\n    socket.on('message', handleWebSocketMessage);\n\n    // Initial fetch of note data\n    fetchNotes();\n\n    // Cleanup function to remove the event listener\n    return () => {\n      socket.off('message', handleWebSocketMessage);\n    };\n  }, [apiUrl]); // Dependencies array, re-run if apiUrl changes\n\n  return (\n    <div className=\"MainPage-page\">\n      <BsNav />\n      <div className=\"centered-content\">\n        <Score className=\"Score\" staves={noteData} />\n      </div>\n    </div>\n  );\n};\n\nexport default MusicVisualiser;\n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,YAAY,QAAQ,oBAAoB,CAAC,CAAC;AACnD,SAASC,KAAK,QAAQ,SAAS;AAC/B,OAAOC,KAAK,MAAM,qBAAqB;AACvC,OAAO,+BAA+B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,GAAA;EAAA,IAAAC,EAAA,GAAAC,YAAA;EAC5B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAMa,MAAM,GAAGC,OAAO,CAACC,GAAG,CAACC,sBAAsB,CAAC,CAAC;;EAEnD;EACA,MAAMC,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMjB,KAAK,CAACkB,GAAG,CAAE,GAAEN,MAAO,yBAAwB,CAAC;MACpED,WAAW,CAACM,QAAQ,CAACE,IAAI,CAAC;MAC1BC,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEJ,QAAQ,CAACE,IAAI,CAAC;IAClD,CAAC,CAAC,OAAOG,KAAK,EAAE;MACdF,OAAO,CAACE,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;IACnD;EACF,CAAC;;EAED;EACAd,EAAA,CAAAV,SAAS,CAAAU,EAAA,CAAC,MAAM;IAAAA,EAAA;IACd,MAAM;MAAEe;IAAO,CAAC,GAAGtB,YAAY,CAAC,CAAC,CAAC,CAAC;;IAEnC;IACA,MAAMuB,sBAAsB,GAAIC,OAAO,IAAK;MAC1C,IAAIA,OAAO,CAACC,IAAI,KAAK,aAAa,EAAE;QAClCC,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC,CAAC,CAAC,CAAC;MAC5B;IACF,CAAC;;IAEDN,MAAM,CAACO,EAAE,CAAC,SAAS,EAAEN,sBAAsB,CAAC;;IAE5C;IACAR,UAAU,CAAC,CAAC;;IAEZ;IACA,OAAO,MAAM;MACXO,MAAM,CAACQ,GAAG,CAAC,SAAS,EAAEP,sBAAsB,CAAC;IAC/C,CAAC;EACH,CAAC;IAAA,QAlBoBvB,YAAY;EAAA,IAkB9B,CAACW,MAAM,CAAC,CAAC;IAAA,QAlBSX,YAAY;EAAA,GAkBpB,CAAC;;EAEd,oBACEI,OAAA;IAAK2B,SAAS,EAAC,eAAe;IAAAC,QAAA,gBAC5B5B,OAAA,CAACF,KAAK;MAAA+B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACThC,OAAA;MAAK2B,SAAS,EAAC,kBAAkB;MAAAC,QAAA,eAC/B5B,OAAA,CAACH,KAAK;QAAC8B,SAAS,EAAC,OAAO;QAACM,MAAM,EAAE5B;MAAS;QAAAwB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1C,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAC9B,GAAA,CA7CID,eAAe;AAAAiC,EAAA,GAAfjC,eAAe;AA+CrB,eAAeA,eAAe;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}