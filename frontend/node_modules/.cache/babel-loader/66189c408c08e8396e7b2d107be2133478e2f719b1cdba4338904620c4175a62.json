{"ast":null,"code":"var _jsxFileName = \"/Users/fitzpatrickcarl/Documents/project-root/frontend/src/Components/TheoryTrainer.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport BsNav from '../Containers/BsNav';\nimport { Score } from './Score';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MusicalStairsGame = () => {\n  _s();\n  const allTasks = [{\n    name: 'Major triad',\n    notes: ['C4', 'E4', 'G4']\n  },\n  // Example notes\n  {\n    name: 'Perfect 5th',\n    notes: ['D4', 'A4']\n  }, {\n    name: 'Major 3rd',\n    notes: ['F4', 'A4']\n  }, {\n    name: 'Perfect 4th',\n    notes: ['B4', 'E5']\n  }, {\n    name: 'Major 2nd',\n    notes: ['G4', 'A4']\n  }\n  // Add other tasks as necessary\n  ];\n\n  const [completedTasks, setCompletedTasks] = useState([]);\n  const [currentTask, setCurrentTask] = useState('');\n  const [score, setScore] = useState(0);\n  const [gameOver, setGameOver] = useState(false);\n  useEffect(() => {\n    generateRandomTask();\n  }, []); // Empty dependency array ensures this effect runs once on mount\n\n  const generateRandomTask = () => {\n    if (completedTasks.length === allTasks.length) {\n      setGameOver(true);\n      return;\n    }\n    let remainingTasks = allTasks.filter(task => !completedTasks.some(completed => completed.name === task.name));\n    const randomIndex = Math.floor(Math.random() * remainingTasks.length);\n    const newTask = remainingTasks[randomIndex];\n    setCompletedTasks(prevTasks => [...prevTasks, newTask]);\n    setCurrentTask(newTask);\n  };\n  const handleTaskCompleted = () => {\n    // You can customize the scoring logic here\n    // setScore(score + 1);\n    generateRandomTask(); // Generate a new task after completion\n  };\n\n  // Optionally, you can add a function to reset the game\n  const resetGame = () => {\n    setCompletedTasks([]);\n    setScore(0);\n    setGameOver(false);\n    generateRandomTask();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(BsNav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Play the Musical Stairs Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Play the following chord or interval on the stairs: \", currentTask.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), currentTask && /*#__PURE__*/_jsxDEV(Score, {\n      staves: [{\n        keys: currentTask.notes\n      }],\n      clef: \"treble\",\n      timeSignature: \"4/4\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Score: \", score]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), gameOver ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Game Over! Your score: \", score, \" out of \", completedTasks.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: resetGame,\n        children: \"Restart Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleTaskCompleted,\n      children: \"Generate New Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_s(MusicalStairsGame, \"rcFhQlm8CxKIbp0J5U+K/Q2EBFY=\");\n_c = MusicalStairsGame;\nexport default MusicalStairsGame;\nvar _c;\n$RefreshReg$(_c, \"MusicalStairsGame\");","map":{"version":3,"names":["React","useState","useEffect","BsNav","Score","jsxDEV","_jsxDEV","MusicalStairsGame","_s","allTasks","name","notes","completedTasks","setCompletedTasks","currentTask","setCurrentTask","score","setScore","gameOver","setGameOver","generateRandomTask","length","remainingTasks","filter","task","some","completed","randomIndex","Math","floor","random","newTask","prevTasks","handleTaskCompleted","resetGame","children","fileName","_jsxFileName","lineNumber","columnNumber","staves","keys","clef","timeSignature","onClick","_c","$RefreshReg$"],"sources":["/Users/fitzpatrickcarl/Documents/project-root/frontend/src/Components/TheoryTrainer.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport BsNav from '../Containers/BsNav';\nimport { Score } from './Score';\n\nconst MusicalStairsGame = () => {\n\n  const allTasks = [\n    { name: 'Major triad', notes: ['C4', 'E4', 'G4'] }, // Example notes\n    { name: 'Perfect 5th', notes: ['D4', 'A4'] },\n    { name: 'Major 3rd', notes: ['F4', 'A4'] },\n    { name: 'Perfect 4th', notes: ['B4', 'E5'] },\n    { name: 'Major 2nd', notes: ['G4', 'A4'] },\n    // Add other tasks as necessary\n  ];\n  \n  \n\n  const [completedTasks, setCompletedTasks] = useState([]);\n  const [currentTask, setCurrentTask] = useState('');\n  const [score, setScore] = useState(0);\n  const [gameOver, setGameOver] = useState(false);\n\n  useEffect(() => {\n    generateRandomTask();\n  }, []); // Empty dependency array ensures this effect runs once on mount\n\n  const generateRandomTask = () => {\n    if (completedTasks.length === allTasks.length) {\n      setGameOver(true);\n      return;\n    }\n  \n    let remainingTasks = allTasks.filter(task => !completedTasks.some(completed => completed.name === task.name));\n    const randomIndex = Math.floor(Math.random() * remainingTasks.length);\n    const newTask = remainingTasks[randomIndex];\n  \n    setCompletedTasks((prevTasks) => [...prevTasks, newTask]);\n    setCurrentTask(newTask);\n  };\n  \n\n  const handleTaskCompleted = () => {\n    // You can customize the scoring logic here\n    // setScore(score + 1);\n    generateRandomTask(); // Generate a new task after completion\n  };\n\n  // Optionally, you can add a function to reset the game\n  const resetGame = () => {\n    setCompletedTasks([]);\n    setScore(0);\n    setGameOver(false);\n    generateRandomTask();\n  };\n\n  return (\n    <div>\n      <BsNav />\n      <h1>Play the Musical Stairs Game</h1>\n      <p>Play the following chord or interval on the stairs: {currentTask.name}</p>\n      {/* Render the Score component with the current task's notes */}\n      {currentTask && <Score staves={[{ keys: currentTask.notes }]} clef=\"treble\" timeSignature=\"4/4\" />}\n      <p>Score: {score}</p>\n      {gameOver ? (\n        <div>\n          <p>Game Over! Your score: {score} out of {completedTasks.length}</p>\n          <button onClick={resetGame}>Restart Game</button>\n        </div>\n      ) : (\n        <button onClick={handleTaskCompleted}>Generate New Task</button>\n      )}\n    </div>\n  );\n  \n};\n\nexport default MusicalStairsGame;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,qBAAqB;AACvC,SAASC,KAAK,QAAQ,SAAS;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhC,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAE9B,MAAMC,QAAQ,GAAG,CACf;IAAEC,IAAI,EAAE,aAAa;IAAEC,KAAK,EAAE,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI;EAAE,CAAC;EAAE;EACpD;IAAED,IAAI,EAAE,aAAa;IAAEC,KAAK,EAAE,CAAC,IAAI,EAAE,IAAI;EAAE,CAAC,EAC5C;IAAED,IAAI,EAAE,WAAW;IAAEC,KAAK,EAAE,CAAC,IAAI,EAAE,IAAI;EAAE,CAAC,EAC1C;IAAED,IAAI,EAAE,aAAa;IAAEC,KAAK,EAAE,CAAC,IAAI,EAAE,IAAI;EAAE,CAAC,EAC5C;IAAED,IAAI,EAAE,WAAW;IAAEC,KAAK,EAAE,CAAC,IAAI,EAAE,IAAI;EAAE;EACzC;EAAA,CACD;;EAID,MAAM,CAACC,cAAc,EAAEC,iBAAiB,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAACa,WAAW,EAAEC,cAAc,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACe,KAAK,EAAEC,QAAQ,CAAC,GAAGhB,QAAQ,CAAC,CAAC,CAAC;EACrC,MAAM,CAACiB,QAAQ,EAAEC,WAAW,CAAC,GAAGlB,QAAQ,CAAC,KAAK,CAAC;EAE/CC,SAAS,CAAC,MAAM;IACdkB,kBAAkB,CAAC,CAAC;EACtB,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,MAAMA,kBAAkB,GAAGA,CAAA,KAAM;IAC/B,IAAIR,cAAc,CAACS,MAAM,KAAKZ,QAAQ,CAACY,MAAM,EAAE;MAC7CF,WAAW,CAAC,IAAI,CAAC;MACjB;IACF;IAEA,IAAIG,cAAc,GAAGb,QAAQ,CAACc,MAAM,CAACC,IAAI,IAAI,CAACZ,cAAc,CAACa,IAAI,CAACC,SAAS,IAAIA,SAAS,CAAChB,IAAI,KAAKc,IAAI,CAACd,IAAI,CAAC,CAAC;IAC7G,MAAMiB,WAAW,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGR,cAAc,CAACD,MAAM,CAAC;IACrE,MAAMU,OAAO,GAAGT,cAAc,CAACK,WAAW,CAAC;IAE3Cd,iBAAiB,CAAEmB,SAAS,IAAK,CAAC,GAAGA,SAAS,EAAED,OAAO,CAAC,CAAC;IACzDhB,cAAc,CAACgB,OAAO,CAAC;EACzB,CAAC;EAGD,MAAME,mBAAmB,GAAGA,CAAA,KAAM;IAChC;IACA;IACAb,kBAAkB,CAAC,CAAC,CAAC,CAAC;EACxB,CAAC;;EAED;EACA,MAAMc,SAAS,GAAGA,CAAA,KAAM;IACtBrB,iBAAiB,CAAC,EAAE,CAAC;IACrBI,QAAQ,CAAC,CAAC,CAAC;IACXE,WAAW,CAAC,KAAK,CAAC;IAClBC,kBAAkB,CAAC,CAAC;EACtB,CAAC;EAED,oBACEd,OAAA;IAAA6B,QAAA,gBACE7B,OAAA,CAACH,KAAK;MAAAiC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACTjC,OAAA;MAAA6B,QAAA,EAAI;IAA4B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrCjC,OAAA;MAAA6B,QAAA,GAAG,sDAAoD,EAACrB,WAAW,CAACJ,IAAI;IAAA;MAAA0B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAE5EzB,WAAW,iBAAIR,OAAA,CAACF,KAAK;MAACoC,MAAM,EAAE,CAAC;QAAEC,IAAI,EAAE3B,WAAW,CAACH;MAAM,CAAC,CAAE;MAAC+B,IAAI,EAAC,QAAQ;MAACC,aAAa,EAAC;IAAK;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAClGjC,OAAA;MAAA6B,QAAA,GAAG,SAAO,EAACnB,KAAK;IAAA;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACpBrB,QAAQ,gBACPZ,OAAA;MAAA6B,QAAA,gBACE7B,OAAA;QAAA6B,QAAA,GAAG,yBAAuB,EAACnB,KAAK,EAAC,UAAQ,EAACJ,cAAc,CAACS,MAAM;MAAA;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACpEjC,OAAA;QAAQsC,OAAO,EAAEV,SAAU;QAAAC,QAAA,EAAC;MAAY;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9C,CAAC,gBAENjC,OAAA;MAAQsC,OAAO,EAAEX,mBAAoB;MAAAE,QAAA,EAAC;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAChE;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAGV,CAAC;AAAC/B,EAAA,CAtEID,iBAAiB;AAAAsC,EAAA,GAAjBtC,iBAAiB;AAwEvB,eAAeA,iBAAiB;AAAC,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}