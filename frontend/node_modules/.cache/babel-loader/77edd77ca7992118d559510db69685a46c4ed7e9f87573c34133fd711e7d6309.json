{"ast":null,"code":"var _jsxFileName = \"/Users/fitzpatrickcarl/my-musical-stairs-app/src/Score.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect } from 'react';\nimport VexFlow from 'vexflow';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VF = VexFlow.Flow;\nconst {\n  Formatter,\n  Renderer,\n  Stave,\n  StaveNote\n} = VF;\nconst clefAndTimeWidth = 60;\nconst notesPerLine = 32;\nexport function Score({\n  staves = [],\n  clef = 'treble',\n  initialWidth = 1000,\n  height = 150\n}) {\n  _s();\n  const container = useRef();\n  const rendererRef = useRef();\n  useEffect(() => {\n    if (rendererRef.current == null) {\n      rendererRef.current = new Renderer(container.current, Renderer.Backends.SVG);\n    }\n    const renderer = rendererRef.current;\n    const screenWidth = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth;\n    const scaleFactor = screenWidth < initialWidth ? screenWidth / initialWidth : 1;\n    renderer.resize(initialWidth * scaleFactor, height);\n    const context = renderer.getContext();\n    context.setFont('Arial', 10, '').setBackgroundFillStyle('#eed');\n    let currX = 0;\n    let currY = 0;\n    staves.forEach((notes, i) => {\n      const staveHeight = height / Math.ceil(staves.length / 2);\n      const stave = new Stave(currX, currY, initialWidth * scaleFactor);\n      if (i % 2 === 0) {\n        stave.addClef(clef);\n      }\n      stave.setContext(context).draw();\n      const processedNotes = notes.map(pitch => {\n        const [note, octave] = pitch.match(/[a-zA-Z]+|[0-9]+/g);\n        return new StaveNote({\n          keys: [`${note}/${octave}`],\n          duration: 'q'\n        });\n      });\n      Formatter.FormatAndDraw(context, stave, processedNotes, {\n        auto_beam: true\n      });\n      currX += stave.getWidth();\n      if (currX >= initialWidth * scaleFactor) {\n        // Move to the next line\n        currX = 0;\n        currY += staveHeight;\n      }\n    });\n  }, [staves, initialWidth, clef, height]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: container\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 10\n  }, this);\n}\n_s(Score, \"Oo94nw6YKmif0GbcQr28f6bFgJU=\");\n_c = Score;\nvar _c;\n$RefreshReg$(_c, \"Score\");","map":{"version":3,"names":["React","useRef","useEffect","VexFlow","jsxDEV","_jsxDEV","VF","Flow","Formatter","Renderer","Stave","StaveNote","clefAndTimeWidth","notesPerLine","Score","staves","clef","initialWidth","height","_s","container","rendererRef","current","Backends","SVG","renderer","screenWidth","window","innerWidth","document","documentElement","clientWidth","body","scaleFactor","resize","context","getContext","setFont","setBackgroundFillStyle","currX","currY","forEach","notes","i","staveHeight","Math","ceil","length","stave","addClef","setContext","draw","processedNotes","map","pitch","note","octave","match","keys","duration","FormatAndDraw","auto_beam","getWidth","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/fitzpatrickcarl/my-musical-stairs-app/src/Score.js"],"sourcesContent":["import React, { useRef, useEffect } from 'react';\nimport VexFlow from 'vexflow';\n\nconst VF = VexFlow.Flow;\nconst { Formatter, Renderer, Stave, StaveNote } = VF;\n\nconst clefAndTimeWidth = 60;\nconst notesPerLine = 32;\n\nexport function Score({\n  staves = [],\n  clef = 'treble',\n  initialWidth = 1000,\n  height = 150,\n}) {\n  const container = useRef();\n  const rendererRef = useRef();\n\n  useEffect(() => {\n    if (rendererRef.current == null) {\n      rendererRef.current = new Renderer(container.current, Renderer.Backends.SVG);\n    }\n\n    const renderer = rendererRef.current;\n    const screenWidth = window.innerWidth || document.documentElement.clientWidth || document.body.clientWidth;\n    const scaleFactor = screenWidth < initialWidth ? screenWidth / initialWidth : 1;\n\n    renderer.resize(initialWidth * scaleFactor, height);\n    const context = renderer.getContext();\n    context.setFont('Arial', 10, '').setBackgroundFillStyle('#eed');\n\n    let currX = 0;\n    let currY = 0;\n\n    staves.forEach((notes, i) => {\n      const staveHeight = height / Math.ceil(staves.length / 2);\n      const stave = new Stave(currX, currY, initialWidth * scaleFactor);\n\n      if (i % 2 === 0) {\n        stave.addClef(clef);\n      }\n\n      stave.setContext(context).draw();\n\n      const processedNotes = notes.map((pitch) => {\n        const [note, octave] = pitch.match(/[a-zA-Z]+|[0-9]+/g);\n        return new StaveNote({\n          keys: [`${note}/${octave}`],\n          duration: 'q',\n        });\n      });\n\n      Formatter.FormatAndDraw(context, stave, processedNotes, {\n        auto_beam: true,\n      });\n\n      currX += stave.getWidth();\n\n      if (currX >= initialWidth * scaleFactor) {\n        // Move to the next line\n        currX = 0;\n        currY += staveHeight;\n      }\n    });\n  }, [staves, initialWidth, clef, height]);\n\n  return <div ref={container} />;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}