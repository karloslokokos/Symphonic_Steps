{"ast":null,"code":"var _jsxFileName = \"/Users/fitzpatrickcarl/Documents/project-root/frontend/src/Components/MusicVisualiser.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { useWebSocket } from './WebSocketContext'; // Adjust this path to your actual WebSocket context\nimport { Score } from './Score';\nimport BsNav from '../Containers/BsNav';\nimport '../styles/MusicVisualiser.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MusicVisualiser = () => {\n  _s();\n  const [noteData, setNoteData] = useState([]);\n  const apiUrl = process.env.REACT_APP_API_BASE_URL;\n  const {\n    socket\n  } = useWebSocket(); // This needs to be called at the top level\n\n  const fetchNotes = async () => {\n    try {\n      const response = await axios.get(`${apiUrl}/get_note_data?limit=16`);\n      setNoteData(response.data);\n      console.log('Note data fetched:', response.data);\n    } catch (error) {\n      console.error('Error fetching note data:', error);\n    }\n  };\n  useEffect(() => {\n    // Assuming your WebSocket setup correctly handles connection and reconnection internally\n    socket.on('data_update', () => {\n      console.log('Data update received, refreshing page');\n      window.location.reload();\n    });\n    fetchNotes();\n    return () => {\n      socket.off('data_update');\n    };\n  }, [apiUrl, socket]); // Adding `socket` to the dependencies array\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"MainPage-page\",\n    children: [/*#__PURE__*/_jsxDEV(BsNav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"centered-content\",\n      children: /*#__PURE__*/_jsxDEV(Score, {\n        className: \"Score\",\n        staves: noteData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n_s(MusicVisualiser, \"IB9pmk0nhCoInfFWgoy9slk8194=\", false, function () {\n  return [useWebSocket];\n});\n_c = MusicVisualiser;\nexport default MusicVisualiser;\n;\nvar _c;\n$RefreshReg$(_c, \"MusicVisualiser\");","map":{"version":3,"names":["React","useEffect","useState","axios","useWebSocket","Score","BsNav","jsxDEV","_jsxDEV","MusicVisualiser","_s","noteData","setNoteData","apiUrl","process","env","REACT_APP_API_BASE_URL","socket","fetchNotes","response","get","data","console","log","error","on","window","location","reload","off","className","children","fileName","_jsxFileName","lineNumber","columnNumber","staves","_c","$RefreshReg$"],"sources":["/Users/fitzpatrickcarl/Documents/project-root/frontend/src/Components/MusicVisualiser.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { useWebSocket } from './WebSocketContext'; // Adjust this path to your actual WebSocket context\nimport { Score } from './Score';\nimport BsNav from '../Containers/BsNav';\nimport '../styles/MusicVisualiser.css';\n\nconst MusicVisualiser = () => {\n  const [noteData, setNoteData] = useState([]);\n  const apiUrl = process.env.REACT_APP_API_BASE_URL;\n  const { socket } = useWebSocket(); // This needs to be called at the top level\n\n  const fetchNotes = async () => {\n    try {\n      const response = await axios.get(`${apiUrl}/get_note_data?limit=16`);\n      setNoteData(response.data);\n      console.log('Note data fetched:', response.data);\n    } catch (error) {\n      console.error('Error fetching note data:', error);\n    }\n  };\n\n  useEffect(() => {\n    // Assuming your WebSocket setup correctly handles connection and reconnection internally\n    socket.on('data_update', () => {\n      console.log('Data update received, refreshing page');\n      window.location.reload();\n    });\n\n    fetchNotes();\n\n    return () => {\n      socket.off('data_update');\n    };\n  }, [apiUrl, socket]); // Adding `socket` to the dependencies array\n\n  return (\n    <div className=\"MainPage-page\">\n      <BsNav />\n      <div className=\"centered-content\">\n        <Score className=\"Score\" staves={noteData} />\n      </div>\n    </div>\n  );\n};\n\nexport default MusicVisualiser;\n;\n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,YAAY,QAAQ,oBAAoB,CAAC,CAAC;AACnD,SAASC,KAAK,QAAQ,SAAS;AAC/B,OAAOC,KAAK,MAAM,qBAAqB;AACvC,OAAO,+BAA+B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAMW,MAAM,GAAGC,OAAO,CAACC,GAAG,CAACC,sBAAsB;EACjD,MAAM;IAAEC;EAAO,CAAC,GAAGb,YAAY,CAAC,CAAC,CAAC,CAAC;;EAEnC,MAAMc,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMhB,KAAK,CAACiB,GAAG,CAAE,GAAEP,MAAO,yBAAwB,CAAC;MACpED,WAAW,CAACO,QAAQ,CAACE,IAAI,CAAC;MAC1BC,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEJ,QAAQ,CAACE,IAAI,CAAC;IAClD,CAAC,CAAC,OAAOG,KAAK,EAAE;MACdF,OAAO,CAACE,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;IACnD;EACF,CAAC;EAEDvB,SAAS,CAAC,MAAM;IACd;IACAgB,MAAM,CAACQ,EAAE,CAAC,aAAa,EAAE,MAAM;MAC7BH,OAAO,CAACC,GAAG,CAAC,uCAAuC,CAAC;MACpDG,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC,CAAC;IAC1B,CAAC,CAAC;IAEFV,UAAU,CAAC,CAAC;IAEZ,OAAO,MAAM;MACXD,MAAM,CAACY,GAAG,CAAC,aAAa,CAAC;IAC3B,CAAC;EACH,CAAC,EAAE,CAAChB,MAAM,EAAEI,MAAM,CAAC,CAAC,CAAC,CAAC;;EAEtB,oBACET,OAAA;IAAKsB,SAAS,EAAC,eAAe;IAAAC,QAAA,gBAC5BvB,OAAA,CAACF,KAAK;MAAA0B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACT3B,OAAA;MAAKsB,SAAS,EAAC,kBAAkB;MAAAC,QAAA,eAC/BvB,OAAA,CAACH,KAAK;QAACyB,SAAS,EAAC,OAAO;QAACM,MAAM,EAAEzB;MAAS;QAAAqB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1C,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACzB,EAAA,CArCID,eAAe;EAAA,QAGAL,YAAY;AAAA;AAAAiC,EAAA,GAH3B5B,eAAe;AAuCrB,eAAeA,eAAe;AAC9B;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}