{"ast":null,"code":"var _jsxFileName = \"/Users/fitzpatrickcarl/Documents/project-root/frontend/src/Components/TheoryTrainer.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport BsNav from '../Containers/BsNav';\nimport '../styles/TheoryTrainer.css';\nimport major2nd from '../img/major2nd.png';\nimport major3rd from '../img/major3rd.png';\nimport perfect4th from '../img/perfect4th.png';\nimport perfect5th from '../img/perfect5th.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TheoryTrainer = () => {\n  _s();\n  const allTasks = [{\n    name: 'Perfect 5th',\n    notes: ['C4', 'G4']\n  }, {\n    name: 'Major 3rd',\n    notes: ['C3', 'E3']\n  }, {\n    name: 'Perfect 4th',\n    notes: ['C4', 'F4']\n  }, {\n    name: 'Major 2nd',\n    notes: ['C4', 'D4']\n  }];\n  const taskImages = {\n    'Perfect 5th': perfect5th,\n    'Major 3rd': major3rd,\n    'Perfect 4th': perfect4th,\n    'Major 2nd': major2nd\n  };\n  const [completedTasks, setCompletedTasks] = useState([]);\n  const [currentTask, setCurrentTask] = useState(null);\n  const [score, setScore] = useState(0);\n  const [gameOver, setGameOver] = useState(false);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [modalMessage, setModalMessage] = useState('');\n  const apiUrl = process.env.REACT_APP_API_BASE_URL;\n  useEffect(() => {\n    generateRandomTask();\n  }, []);\n  const generateRandomTask = () => {\n    let remainingTasks = allTasks.filter(task => !completedTasks.includes(task.name));\n    if (remainingTasks.length === 0) {\n      setGameOver(true);\n      return;\n    }\n    const randomIndex = Math.floor(Math.random() * remainingTasks.length);\n    const newTask = remainingTasks[randomIndex];\n    setCurrentTask(newTask);\n    setCompletedTasks(prevTasks => [...prevTasks, newTask.name]);\n  };\n  const confirmInput = async () => {\n    try {\n      const response = await axios.get(`${apiUrl}/api/get_note_data`, {\n        params: {\n          limit: 2\n        }\n      });\n      const fetchedNotes = response.data;\n      const isValid = fetchedNotes.some(group => {\n        const taskNotesStr = currentTask.notes.sort().join(',');\n        const groupStr = group.sort().join(',');\n        return taskNotesStr === groupStr;\n      });\n      if (isValid) {\n        setModalMessage(\"Correct! Moving to the next task.\");\n        setScore(prevScore => prevScore + 1);\n      } else {\n        setModalMessage(\"Incorrect. Moving to the next task.\");\n      }\n      setIsModalOpen(true);\n      generateRandomTask();\n    } catch (error) {\n      console.error(\"Error fetching note data:\", error);\n      setModalMessage(\"Error fetching data. Try again.\");\n      setIsModalOpen(true);\n    }\n  };\n  const getScoreMessage = score => {\n    switch (score) {\n      case 1:\n        return \"You scored 25%, you need to work on your theory!\";\n      case 2:\n        return \"You scored 50%, not bad but keep studying!\";\n      case 3:\n        return \"You scored 75%, good work, you're nearly an expert!\";\n      case 4:\n        return \"You scored 100%, you are a music theory expert!\";\n      default:\n        return \"\";\n    }\n  };\n  const closeModal = () => {\n    setIsModalOpen(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"musical-stairs-game\",\n    children: [/*#__PURE__*/_jsxDEV(BsNav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Play the Musical Stairs Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), currentTask ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"task-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Play the following interval on the stairs: \", currentTask.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"image-container\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: taskImages[currentTask.name],\n            alt: currentTask.name,\n            className: \"task-image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"button-container\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"validate-task-btn\",\n            onClick: confirmInput,\n            children: \"Confirm Answer!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading task...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Score: \", score]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), gameOver && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-over-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: getScoreMessage(score)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"restart-game-btn\",\n          onClick: () => window.location.reload(),\n          children: \"Restart Game\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 11\n      }, this), isModalOpen && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"feedback-modal\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"feedback-modal-content\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"feedback-modal-close\",\n            onClick: closeModal,\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: modalMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this);\n};\n_s(TheoryTrainer, \"ITsO6WeIOqfwy0J9ztYTken5hvc=\");\n_c = TheoryTrainer;\nexport default TheoryTrainer;\nvar _c;\n$RefreshReg$(_c, \"TheoryTrainer\");","map":{"version":3,"names":["React","useState","useEffect","axios","BsNav","major2nd","major3rd","perfect4th","perfect5th","jsxDEV","_jsxDEV","TheoryTrainer","_s","allTasks","name","notes","taskImages","completedTasks","setCompletedTasks","currentTask","setCurrentTask","score","setScore","gameOver","setGameOver","isModalOpen","setIsModalOpen","modalMessage","setModalMessage","apiUrl","process","env","REACT_APP_API_BASE_URL","generateRandomTask","remainingTasks","filter","task","includes","length","randomIndex","Math","floor","random","newTask","prevTasks","confirmInput","response","get","params","limit","fetchedNotes","data","isValid","some","group","taskNotesStr","sort","join","groupStr","prevScore","error","console","getScoreMessage","closeModal","className","children","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","onClick","window","location","reload","_c","$RefreshReg$"],"sources":["/Users/fitzpatrickcarl/Documents/project-root/frontend/src/Components/TheoryTrainer.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport BsNav from '../Containers/BsNav';\nimport '../styles/TheoryTrainer.css';\nimport major2nd from '../img/major2nd.png';\nimport major3rd from '../img/major3rd.png';\nimport perfect4th from '../img/perfect4th.png';\nimport perfect5th from '../img/perfect5th.png';\n\nconst TheoryTrainer = () => {\n  const allTasks = [\n    { name: 'Perfect 5th', notes: ['C4', 'G4'] },\n    { name: 'Major 3rd', notes: ['C3', 'E3'] },\n    { name: 'Perfect 4th', notes: ['C4', 'F4'] },\n    { name: 'Major 2nd', notes: ['C4', 'D4'] },\n  ];\n\n  const taskImages = {\n    'Perfect 5th': perfect5th,\n    'Major 3rd': major3rd,\n    'Perfect 4th': perfect4th,\n    'Major 2nd': major2nd,\n  };\n\n  const [completedTasks, setCompletedTasks] = useState([]);\n  const [currentTask, setCurrentTask] = useState(null);\n  const [score, setScore] = useState(0);\n  const [gameOver, setGameOver] = useState(false);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [modalMessage, setModalMessage] = useState('');\n  const apiUrl = process.env.REACT_APP_API_BASE_URL;\n\n  useEffect(() => {\n    generateRandomTask();\n  }, []);\n\n  const generateRandomTask = () => {\n    let remainingTasks = allTasks.filter(task => !completedTasks.includes(task.name));\n  \n    if (remainingTasks.length === 0) {\n      setGameOver(true);\n      return;\n    }\n  \n    const randomIndex = Math.floor(Math.random() * remainingTasks.length);\n    const newTask = remainingTasks[randomIndex];\n  \n    setCurrentTask(newTask);\n    setCompletedTasks(prevTasks => [...prevTasks, newTask.name]);\n  };\n\n  const confirmInput = async () => {\n    try {\n      const response = await axios.get(`${apiUrl}/api/get_note_data`, {\n        params: { limit: 2 }\n      });\n      const fetchedNotes = response.data;\n      \n      const isValid = fetchedNotes.some(group => {\n        const taskNotesStr = currentTask.notes.sort().join(',');\n        const groupStr = group.sort().join(',');\n        return taskNotesStr === groupStr;\n      });\n  \n      if (isValid) {\n        setModalMessage(\"Correct! Moving to the next task.\");\n        setScore(prevScore => prevScore + 1);\n      } else {\n        setModalMessage(\"Incorrect. Moving to the next task.\");\n      }\n      setIsModalOpen(true);\n      generateRandomTask();\n    } catch (error) {\n      console.error(\"Error fetching note data:\", error);\n      setModalMessage(\"Error fetching data. Try again.\");\n      setIsModalOpen(true);\n    }\n  };\n\n  const getScoreMessage = (score) => {\n    switch (score) {\n      case 1:\n        return \"You scored 25%, you need to work on your theory!\";\n      case 2:\n        return \"You scored 50%, not bad but keep studying!\";\n      case 3:\n        return \"You scored 75%, good work, you're nearly an expert!\";\n      case 4:\n        return \"You scored 100%, you are a music theory expert!\";\n      default:\n        return \"\";\n    }\n  };\n\n  const closeModal = () => {\n    setIsModalOpen(false);\n  };\n\n  return (\n    <div className=\"musical-stairs-game\">\n      <BsNav />\n      <div className=\"game-container\">\n        <h1>Play the Musical Stairs Game</h1>\n        {currentTask ? (\n          <div className=\"task-container\">\n            <p>Play the following interval on the stairs: {currentTask.name}</p>\n            <div className=\"image-container\">\n              <img src={taskImages[currentTask.name]} alt={currentTask.name} className=\"task-image\" />\n            </div>\n            <div className=\"button-container\">\n              <button className=\"validate-task-btn\" onClick={confirmInput}>Confirm Answer!</button>\n            </div>\n          </div>\n        ) : (\n          <p>Loading task...</p>\n        )}\n        <p>Score: {score}</p>\n        {gameOver && (\n          <div className=\"game-over-container\">\n            <p>{getScoreMessage(score)}</p>\n            <button className=\"restart-game-btn\" onClick={() => window.location.reload()}>Restart Game</button>\n          </div>\n        )}\n        {isModalOpen && (\n          <div className=\"feedback-modal\">\n            <div className=\"feedback-modal-content\">\n              <span className=\"feedback-modal-close\" onClick={closeModal}>&times;</span>\n              <p>{modalMessage}</p>\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default TheoryTrainer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}