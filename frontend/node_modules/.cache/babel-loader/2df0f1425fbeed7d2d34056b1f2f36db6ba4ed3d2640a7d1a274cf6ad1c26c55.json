{"ast":null,"code":"var _jsxFileName = \"/Users/fitzpatrickcarl/my-musical-stairs-app/src/MusicVisualiser.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Vex from 'vexflow';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MusicVisualizer() {\n  _s();\n  const [noteData, setNoteData] = useState([]);\n  useEffect(() => {\n    // Fetch note data from your database (replace with your actual API call)\n    // Example structure: { pitch: 'C4', duration: '4n' }\n    fetch('http://localhost:5000/get_note_data').then(response => response.json()).then(data => {\n      setNoteData(data);\n    }).catch(error => {\n      console.error('Error fetching note data:', error);\n    });\n  }, []);\n\n  // ... (previous code)\n\n  useEffect(() => {\n    const VF = Vex.Flow;\n    const container = document.getElementById('visualizer-container');\n    container.innerHTML = ''; // Clear previous content\n\n    if (noteData.length > 0) {\n      // Create a renderer and context\n      const renderer = new VF.Renderer(container, VF.Renderer.Backends.SVG);\n      const context = renderer.getContext();\n\n      // Create a stave\n      const stave = new VF.Stave(10, 0, 400);\n\n      // Create a voice\n      const voice = new VF.Voice({\n        num_beats: noteData.length,\n        beat_value: 4\n      });\n\n      // Add notes to the voice\n      const staveNotes = noteData.map(note => {\n        if (note && note.pitch) {\n          try {\n            const staveNote = new VF.StaveNote({\n              keys: [note.pitch],\n              duration: 'q'\n            });\n            staveNote.addModifier(new VF.Annotation(note.pitch).setVerticalJustification(VF.Annotation.VerticalJustify.BOTTOM));\n            return staveNote;\n          } catch (error) {\n            console.error('Error creating StaveNote:', error);\n            console.log('Note data:', note);\n            return null;\n          }\n        } else {\n          console.warn('Invalid note data:', note);\n          return null;\n        }\n      }).filter(note => note !== null);\n      console.log('Stave Notes:', staveNotes);\n      voice.addTickables(staveNotes);\n      console.log('Voice:', voice);\n\n      // Create a formatter and format the voice\n      const formatter = new VF.Formatter().joinVoices([voice]).formatToStave([voice], stave);\n\n      // Draw stave and voice\n      stave.setContext(context).draw();\n      voice.draw(context, stave);\n    }\n  }, [noteData]);\n\n  // ... (remaining code)\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Music Visualizer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"visualizer-container\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n}\n_s(MusicVisualizer, \"kFbI/fFNJdhEvBWyFfW6ZkH3ahs=\");\n_c = MusicVisualizer;\nexport default MusicVisualizer;\nvar _c;\n$RefreshReg$(_c, \"MusicVisualizer\");","map":{"version":3,"names":["React","useEffect","useState","Vex","jsxDEV","_jsxDEV","MusicVisualizer","_s","noteData","setNoteData","fetch","then","response","json","data","catch","error","console","VF","Flow","container","document","getElementById","innerHTML","length","renderer","Renderer","Backends","SVG","context","getContext","stave","Stave","voice","Voice","num_beats","beat_value","staveNotes","map","note","pitch","staveNote","StaveNote","keys","duration","addModifier","Annotation","setVerticalJustification","VerticalJustify","BOTTOM","log","warn","filter","addTickables","formatter","Formatter","joinVoices","formatToStave","setContext","draw","children","fileName","_jsxFileName","lineNumber","columnNumber","id","_c","$RefreshReg$"],"sources":["/Users/fitzpatrickcarl/my-musical-stairs-app/src/MusicVisualiser.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Vex from 'vexflow';\n\nfunction MusicVisualizer() {\n  const [noteData, setNoteData] = useState([]);\n\n  useEffect(() => {\n    // Fetch note data from your database (replace with your actual API call)\n    // Example structure: { pitch: 'C4', duration: '4n' }\n    fetch('http://localhost:5000/get_note_data')\n      .then((response) => response.json())\n      .then((data) => {\n        setNoteData(data);\n      })\n      .catch((error) => {\n        console.error('Error fetching note data:', error);\n      });\n  }, []);\n\n// ... (previous code)\n\nuseEffect(() => {\n  const VF = Vex.Flow;\n  const container = document.getElementById('visualizer-container');\n  container.innerHTML = ''; // Clear previous content\n\n  if (noteData.length > 0) {\n    // Create a renderer and context\n    const renderer = new VF.Renderer(container, VF.Renderer.Backends.SVG);\n    const context = renderer.getContext();\n\n    // Create a stave\n    const stave = new VF.Stave(10, 0, 400);\n\n    // Create a voice\n    const voice = new VF.Voice({ num_beats: noteData.length, beat_value: 4 });\n\n   // Add notes to the voice\nconst staveNotes = noteData.map((note) => {\n  if (note && note.pitch) {\n    try {\n      const staveNote = new VF.StaveNote({\n        keys: [note.pitch],\n        duration: 'q',\n      });\n      staveNote.addModifier(new VF.Annotation(note.pitch).setVerticalJustification(VF.Annotation.VerticalJustify.BOTTOM));\n      return staveNote;\n    } catch (error) {\n      console.error('Error creating StaveNote:', error);\n      console.log('Note data:', note);\n      return null;\n    }\n  } else {\n    console.warn('Invalid note data:', note);\n    return null;\n  }\n}).filter((note) => note !== null);\n\nconsole.log('Stave Notes:', staveNotes);\n\nvoice.addTickables(staveNotes);\n\nconsole.log('Voice:', voice);\n\n\n    // Create a formatter and format the voice\n    const formatter = new VF.Formatter().joinVoices([voice]).formatToStave([voice], stave);\n\n    // Draw stave and voice\n    stave.setContext(context).draw();\n    voice.draw(context, stave);\n  }\n}, [noteData]);\n\n\n// ... (remaining code)\n\n\n  return (\n    <div>\n      <h1>Music Visualizer</h1>\n      <div id=\"visualizer-container\"></div>\n    </div>\n  );\n}\n\nexport default MusicVisualizer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}