{"ast":null,"code":"var _jsxFileName = \"/Users/fitzpatrickcarl/Documents/project-root/frontend/src/index.js\";\n// this is the entry point for a \n// React application created using Create React App (CRA). \n// This file sets up the main React component tree, \n// imports global styles, and integrates performance monitoring tools. \n\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render( /*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 19,\n  columnNumber: 3\n}, this));\nreportWebVitals();\n\n// Imports:\n// React is imported to use JSX and React components.\n// ReactDOM is specifically imported from react-dom/client, which is a new way in React 18+ to prepare for concurrent features in future releases.\n// Stylesheets (index.css and Bootstrap) are imported to apply global styles across the application. Bootstrap is used for its ready-made \n// responsive layouts and component styles.\n\n// Root Container:\n// The ReactDOM.createRoot() method is used to create a root DOM node for the React application, which is where your app will live in the DOM.\n//  This root creation is specific to React 18 and later, reflecting the updated API that supports concurrent features.\n\n// React Application Rendering:\n// The root.render() method mounts the React application to the DOM. It wraps the App component inside <React.StrictMode>, which is a wrapper \n// component that adds additional checks and warnings for its descendants. React.StrictMode is a tool for highlighting potential problems in an\n//  application. It does not render any visible UI but activates additional checks and warnings for its descendants.\n// Performance Monitoring:\n\n// reportWebVitals is a function that can be used to log performance metrics related to the user's experience. It helps track metrics like \n// largest contentful paint, first input delay, and cumulative layout shift among others. This is particularly useful for understanding and \n// improving the real-world performance of the application.","map":{"version":3,"names":["React","ReactDOM","App","reportWebVitals","jsxDEV","_jsxDEV","root","createRoot","document","getElementById","render","StrictMode","children","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/Users/fitzpatrickcarl/Documents/project-root/frontend/src/index.js"],"sourcesContent":["// this is the entry point for a \n// React application created using Create React App (CRA). \n// This file sets up the main React component tree, \n// imports global styles, and integrates performance monitoring tools. \n\n\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.css';\n\n\n\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n\nreportWebVitals();\n\n// Imports:\n// React is imported to use JSX and React components.\n// ReactDOM is specifically imported from react-dom/client, which is a new way in React 18+ to prepare for concurrent features in future releases.\n// Stylesheets (index.css and Bootstrap) are imported to apply global styles across the application. Bootstrap is used for its ready-made \n// responsive layouts and component styles.\n\n// Root Container:\n// The ReactDOM.createRoot() method is used to create a root DOM node for the React application, which is where your app will live in the DOM.\n//  This root creation is specific to React 18 and later, reflecting the updated API that supports concurrent features.\n\n// React Application Rendering:\n// The root.render() method mounts the React application to the DOM. It wraps the App component inside <React.StrictMode>, which is a wrapper \n// component that adds additional checks and warnings for its descendants. React.StrictMode is a tool for highlighting potential problems in an\n//  application. It does not render any visible UI but activates additional checks and warnings for its descendants.\n// Performance Monitoring:\n\n// reportWebVitals is a function that can be used to log performance metrics related to the user's experience. It helps track metrics like \n// largest contentful paint, first input delay, and cumulative layout shift among others. This is particularly useful for understanding and \n// improving the real-world performance of the application."],"mappings":";AAAA;AACA;AACA;AACA;;AAGA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAO,aAAa;AACpB,OAAOC,GAAG,MAAM,OAAO;AACvB,OAAOC,eAAe,MAAM,mBAAmB;AAC/C,OAAO,kCAAkC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAK1C,MAAMC,IAAI,GAAGL,QAAQ,CAACM,UAAU,CAACC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAAC;AACjEH,IAAI,CAACI,MAAM,eACTL,OAAA,CAACL,KAAK,CAACW,UAAU;EAAAC,QAAA,eACfP,OAAA,CAACH,GAAG;IAAAW,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE;AAAC;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OACS,CACpB,CAAC;AAGDb,eAAe,CAAC,CAAC;;AAEjB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}