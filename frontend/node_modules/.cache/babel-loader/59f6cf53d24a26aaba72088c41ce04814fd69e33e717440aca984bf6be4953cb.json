{"ast":null,"code":"var _jsxFileName = \"/Users/fitzpatrickcarl/Documents/project-root/frontend/src/Components/MusicVisualiser.js\",\n  _s = $RefreshSig$();\n// MusicVisualiser.jsx\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport io from 'socket.io-client';\nimport BsNav from './BsNav';\nimport './MusicVisualiser.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MusicVisualiser = () => {\n  _s();\n  const [noteData, setNoteData] = useState([]);\n  const apiUrl = process.env.REACT_APP_API_BASE_URL;\n  useEffect(() => {\n    // Fetch initial note data\n    const fetchData = async () => {\n      try {\n        const response = await axios.get(`${apiUrl}/get_note_data?limit=16`);\n        setNoteData(response.data);\n      } catch (error) {\n        console.error('Error fetching note data:', error);\n      }\n    };\n    fetchData();\n\n    // Connect to WebSocket server\n    const socket = io(apiUrl);\n    socket.on('note_data', data => {\n      setNoteData(currentData => [...currentData, data.message].slice(-16)); // Keep only the latest 16 notes\n    });\n\n    return () => {\n      socket.disconnect();\n    };\n  }, [apiUrl]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"MainPage-page\",\n    children: [/*#__PURE__*/_jsxDEV(BsNav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"centered-content\",\n      children: noteData.map((note, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: note\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n_s(MusicVisualiser, \"A9SqIwvYJAQmbQJuylu2O/Ct1EY=\");\n_c = MusicVisualiser;\nexport default MusicVisualiser;\nvar _c;\n$RefreshReg$(_c, \"MusicVisualiser\");","map":{"version":3,"names":["React","useEffect","useState","axios","io","BsNav","jsxDEV","_jsxDEV","MusicVisualiser","_s","noteData","setNoteData","apiUrl","process","env","REACT_APP_API_BASE_URL","fetchData","response","get","data","error","console","socket","on","currentData","message","slice","disconnect","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","note","index","_c","$RefreshReg$"],"sources":["/Users/fitzpatrickcarl/Documents/project-root/frontend/src/Components/MusicVisualiser.js"],"sourcesContent":["// MusicVisualiser.jsx\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport io from 'socket.io-client';\nimport BsNav from './BsNav';\nimport './MusicVisualiser.css';\n\nconst MusicVisualiser = () => {\n    const [noteData, setNoteData] = useState([]);\n    const apiUrl = process.env.REACT_APP_API_BASE_URL;\n    \n    useEffect(() => {\n        // Fetch initial note data\n        const fetchData = async () => {\n            try {\n                const response = await axios.get(`${apiUrl}/get_note_data?limit=16`);\n                setNoteData(response.data);\n            } catch (error) {\n                console.error('Error fetching note data:', error);\n            }\n        };\n        fetchData();\n\n        // Connect to WebSocket server\n        const socket = io(apiUrl);\n        socket.on('note_data', data => {\n            setNoteData(currentData => [...currentData, data.message].slice(-16)); // Keep only the latest 16 notes\n        });\n\n        return () => {\n            socket.disconnect();\n        };\n    }, [apiUrl]);\n\n    return (\n        <div className=\"MainPage-page\">\n            <BsNav />\n            <div className=\"centered-content\">\n                {/* Render your notes here */}\n                {noteData.map((note, index) => (\n                    <div key={index}>{note}</div>\n                ))}\n            </div>\n        </div>\n    );\n};\n\nexport default MusicVisualiser;\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,EAAE,MAAM,kBAAkB;AACjC,OAAOC,KAAK,MAAM,SAAS;AAC3B,OAAO,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/B,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAMU,MAAM,GAAGC,OAAO,CAACC,GAAG,CAACC,sBAAsB;EAEjDd,SAAS,CAAC,MAAM;IACZ;IACA,MAAMe,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC1B,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMd,KAAK,CAACe,GAAG,CAAE,GAAEN,MAAO,yBAAwB,CAAC;QACpED,WAAW,CAACM,QAAQ,CAACE,IAAI,CAAC;MAC9B,CAAC,CAAC,OAAOC,KAAK,EAAE;QACZC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;MACrD;IACJ,CAAC;IACDJ,SAAS,CAAC,CAAC;;IAEX;IACA,MAAMM,MAAM,GAAGlB,EAAE,CAACQ,MAAM,CAAC;IACzBU,MAAM,CAACC,EAAE,CAAC,WAAW,EAAEJ,IAAI,IAAI;MAC3BR,WAAW,CAACa,WAAW,IAAI,CAAC,GAAGA,WAAW,EAAEL,IAAI,CAACM,OAAO,CAAC,CAACC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IAC3E,CAAC,CAAC;;IAEF,OAAO,MAAM;MACTJ,MAAM,CAACK,UAAU,CAAC,CAAC;IACvB,CAAC;EACL,CAAC,EAAE,CAACf,MAAM,CAAC,CAAC;EAEZ,oBACIL,OAAA;IAAKqB,SAAS,EAAC,eAAe;IAAAC,QAAA,gBAC1BtB,OAAA,CAACF,KAAK;MAAAyB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACT1B,OAAA;MAAKqB,SAAS,EAAC,kBAAkB;MAAAC,QAAA,EAE5BnB,QAAQ,CAACwB,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACtB7B,OAAA;QAAAsB,QAAA,EAAkBM;MAAI,GAAZC,KAAK;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAa,CAC/B;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAACxB,EAAA,CAtCID,eAAe;AAAA6B,EAAA,GAAf7B,eAAe;AAwCrB,eAAeA,eAAe;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}