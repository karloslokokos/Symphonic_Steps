{"ast":null,"code":"var _jsxFileName = \"/Users/fitzpatrickcarl/Documents/project-root/frontend/src/Components/TheoryTrainer.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MusicalStairsGame = () => {\n  _s();\n  const tasks = ['C Major', 'D Minor', 'E Major', 'Perfect 5th', 'Major 3rd', 'Minor 7th', 'Diminished 5th', 'Perfect 4th', 'Major 6th', 'Minor 2nd' /* Add more tasks as needed */];\n\n  const [currentTask, setCurrentTask] = useState('');\n  const [score, setScore] = useState(0);\n  useEffect(() => {\n    generateRandomTask();\n  }, []); // Empty dependency array ensures this effect runs once on mount\n\n  const generateRandomTask = () => {\n    const randomIndex = Math.floor(Math.random() * tasks.length);\n    const newTask = tasks[randomIndex];\n    setCurrentTask(newTask);\n  };\n  const handleTaskCompleted = () => {\n    // You can customize the scoring logic here\n    setScore(score + 1);\n    generateRandomTask(); // Generate a new task after completion\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(BsNav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Play the Musical Stairs Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Play the following chord or interval on the stairs: \", currentTask]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Score: \", score]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleTaskCompleted,\n      children: \"Generate New Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(MusicalStairsGame, \"HUdPSBnptQZmdZ/IvmfGRuyZDiY=\");\n_c = MusicalStairsGame;\nexport default MusicalStairsGame;\nvar _c;\n$RefreshReg$(_c, \"MusicalStairsGame\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","MusicalStairsGame","_s","tasks","currentTask","setCurrentTask","score","setScore","generateRandomTask","randomIndex","Math","floor","random","length","newTask","handleTaskCompleted","children","BsNav","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/fitzpatrickcarl/Documents/project-root/frontend/src/Components/TheoryTrainer.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst MusicalStairsGame = () => {\n  const tasks = [\n    'C Major', 'D Minor', 'E Major',\n    'Perfect 5th', 'Major 3rd', 'Minor 7th',\n    'Diminished 5th', 'Perfect 4th', 'Major 6th',\n    'Minor 2nd', /* Add more tasks as needed */\n  ];\n\n  const [currentTask, setCurrentTask] = useState('');\n  const [score, setScore] = useState(0);\n\n  useEffect(() => {\n    generateRandomTask();\n  }, []); // Empty dependency array ensures this effect runs once on mount\n\n  const generateRandomTask = () => {\n    const randomIndex = Math.floor(Math.random() * tasks.length);\n    const newTask = tasks[randomIndex];\n    setCurrentTask(newTask);\n  };\n\n  const handleTaskCompleted = () => {\n    // You can customize the scoring logic here\n    setScore(score + 1);\n    generateRandomTask(); // Generate a new task after completion\n  };\n\n  return (\n    <div>\n       <BsNav />\n      <h1>Play the Musical Stairs Game</h1>\n      <p>Play the following chord or interval on the stairs: {currentTask}</p>\n      <p>Score: {score}</p>\n      <button onClick={handleTaskCompleted}>Generate New Task</button>\n      {/* Add your stair visualization or other game elements here */}\n    </div>\n  );\n};\n\nexport default MusicalStairsGame;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC9B,MAAMC,KAAK,GAAG,CACZ,SAAS,EAAE,SAAS,EAAE,SAAS,EAC/B,aAAa,EAAE,WAAW,EAAE,WAAW,EACvC,gBAAgB,EAAE,aAAa,EAAE,WAAW,EAC5C,WAAW,CAAE,+BACd;;EAED,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC;EAErCC,SAAS,CAAC,MAAM;IACdU,kBAAkB,CAAC,CAAC;EACtB,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,MAAMA,kBAAkB,GAAGA,CAAA,KAAM;IAC/B,MAAMC,WAAW,GAAGC,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,MAAM,CAAC,CAAC,GAAGT,KAAK,CAACU,MAAM,CAAC;IAC5D,MAAMC,OAAO,GAAGX,KAAK,CAACM,WAAW,CAAC;IAClCJ,cAAc,CAACS,OAAO,CAAC;EACzB,CAAC;EAED,MAAMC,mBAAmB,GAAGA,CAAA,KAAM;IAChC;IACAR,QAAQ,CAACD,KAAK,GAAG,CAAC,CAAC;IACnBE,kBAAkB,CAAC,CAAC,CAAC,CAAC;EACxB,CAAC;;EAED,oBACER,OAAA;IAAAgB,QAAA,gBACGhB,OAAA,CAACiB,KAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACVrB,OAAA;MAAAgB,QAAA,EAAI;IAA4B;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrCrB,OAAA;MAAAgB,QAAA,GAAG,sDAAoD,EAACZ,WAAW;IAAA;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACxErB,OAAA;MAAAgB,QAAA,GAAG,SAAO,EAACV,KAAK;IAAA;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrBrB,OAAA;MAAQsB,OAAO,EAAEP,mBAAoB;MAAAC,QAAA,EAAC;IAAiB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAE7D,CAAC;AAEV,CAAC;AAACnB,EAAA,CArCID,iBAAiB;AAAAsB,EAAA,GAAjBtB,iBAAiB;AAuCvB,eAAeA,iBAAiB;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}