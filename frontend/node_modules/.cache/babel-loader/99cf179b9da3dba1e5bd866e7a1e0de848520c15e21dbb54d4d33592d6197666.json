{"ast":null,"code":"var _jsxFileName = \"/Users/fitzpatrickcarl/Documents/project-root/frontend/src/Components/MusicVisualiser.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport axios from 'axios';\nimport { getSocket } from './SocketService'; // Adjust the import path as necessary\nimport { Score } from './Score';\nimport BsNav from '../Containers/BsNav';\nimport '../styles/MusicVisualiser.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MusicVisualiser = () => {\n  _s();\n  const apiUrl = process.env.REACT_APP_API_BASE_URL;\n\n  // Function to fetch the latest note data\n  const fetchNotes = async () => {\n    try {\n      const response = await axios.get(`${apiUrl}/get_note_data?limit=16`);\n      console.log('Note data fetched', response.data);\n      // Assuming you're setting state or doing something with response here\n    } catch (error) {\n      console.error('Error fetching note data:', error);\n    }\n  };\n  useEffect(() => {\n    fetchNotes(); // Fetch initial note data\n\n    const socket = getSocket(); // Use the singleton socket instance\n\n    // Listen for the signal indicating new data is available\n    socket.on('data_update', () => {\n      console.log('New data available signal received. Refreshing page.');\n      window.location.reload(); // Refresh the page\n    });\n\n    // Clean up by removing the event listener\n    return () => {\n      socket.off('data_update');\n    };\n  }, [apiUrl]); // Only run this effect on initial mount\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"MainPage-page\",\n    children: [/*#__PURE__*/_jsxDEV(BsNav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"centered-content\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"score-container\",\n        children: /*#__PURE__*/_jsxDEV(Score, {\n          className: \"Score\" /* assuming props passed to Score */\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(MusicVisualiser, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = MusicVisualiser;\nexport default MusicVisualiser;\nvar _c;\n$RefreshReg$(_c, \"MusicVisualiser\");","map":{"version":3,"names":["React","useEffect","axios","getSocket","Score","BsNav","jsxDEV","_jsxDEV","MusicVisualiser","_s","apiUrl","process","env","REACT_APP_API_BASE_URL","fetchNotes","response","get","console","log","data","error","socket","on","window","location","reload","off","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/fitzpatrickcarl/Documents/project-root/frontend/src/Components/MusicVisualiser.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport axios from 'axios';\nimport { getSocket } from './SocketService'; // Adjust the import path as necessary\nimport { Score } from './Score';\nimport BsNav from '../Containers/BsNav';\nimport '../styles/MusicVisualiser.css';\n\nconst MusicVisualiser = () => {\n  const apiUrl = process.env.REACT_APP_API_BASE_URL;\n\n  // Function to fetch the latest note data\n  const fetchNotes = async () => {\n    try {\n      const response = await axios.get(`${apiUrl}/get_note_data?limit=16`);\n      console.log('Note data fetched', response.data);\n      // Assuming you're setting state or doing something with response here\n    } catch (error) {\n      console.error('Error fetching note data:', error);\n    }\n  };\n\n  useEffect(() => {\n    fetchNotes(); // Fetch initial note data\n\n    const socket = getSocket(); // Use the singleton socket instance\n\n    // Listen for the signal indicating new data is available\n    socket.on('data_update', () => {\n      console.log('New data available signal received. Refreshing page.');\n      window.location.reload(); // Refresh the page\n    });\n\n    // Clean up by removing the event listener\n    return () => {\n      socket.off('data_update');\n    };\n  }, [apiUrl]); // Only run this effect on initial mount\n\n  return (\n    <div className=\"MainPage-page\">\n      <BsNav />\n      <div className=\"centered-content\">\n        <div className=\"score-container\">\n          <Score className=\"Score\" /* assuming props passed to Score */ />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default MusicVisualiser;\n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,iBAAiB,CAAC,CAAC;AAC7C,SAASC,KAAK,QAAQ,SAAS;AAC/B,OAAOC,KAAK,MAAM,qBAAqB;AACvC,OAAO,+BAA+B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAMC,MAAM,GAAGC,OAAO,CAACC,GAAG,CAACC,sBAAsB;;EAEjD;EACA,MAAMC,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMb,KAAK,CAACc,GAAG,CAAE,GAAEN,MAAO,yBAAwB,CAAC;MACpEO,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEH,QAAQ,CAACI,IAAI,CAAC;MAC/C;IACF,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdH,OAAO,CAACG,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;IACnD;EACF,CAAC;EAEDnB,SAAS,CAAC,MAAM;IACda,UAAU,CAAC,CAAC,CAAC,CAAC;;IAEd,MAAMO,MAAM,GAAGlB,SAAS,CAAC,CAAC,CAAC,CAAC;;IAE5B;IACAkB,MAAM,CAACC,EAAE,CAAC,aAAa,EAAE,MAAM;MAC7BL,OAAO,CAACC,GAAG,CAAC,sDAAsD,CAAC;MACnEK,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC,CAAC,CAAC,CAAC;IAC5B,CAAC,CAAC;;IAEF;IACA,OAAO,MAAM;MACXJ,MAAM,CAACK,GAAG,CAAC,aAAa,CAAC;IAC3B,CAAC;EACH,CAAC,EAAE,CAAChB,MAAM,CAAC,CAAC,CAAC,CAAC;;EAEd,oBACEH,OAAA;IAAKoB,SAAS,EAAC,eAAe;IAAAC,QAAA,gBAC5BrB,OAAA,CAACF,KAAK;MAAAwB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACTzB,OAAA;MAAKoB,SAAS,EAAC,kBAAkB;MAAAC,QAAA,eAC/BrB,OAAA;QAAKoB,SAAS,EAAC,iBAAiB;QAAAC,QAAA,eAC9BrB,OAAA,CAACH,KAAK;UAACuB,SAAS,EAAC,OAAO,CAAC;QAAA;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAsC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7D;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACvB,EAAA,CAzCID,eAAe;AAAAyB,EAAA,GAAfzB,eAAe;AA2CrB,eAAeA,eAAe;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}