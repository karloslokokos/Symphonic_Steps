{"ast":null,"code":"var _jsxFileName = \"/Users/fitzpatrickcarl/my-musical-stairs-app/src/Components/Score.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect } from 'react';\nimport VexFlow from 'vexflow';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VF = VexFlow.Flow;\nconst {\n  Formatter,\n  Renderer,\n  Stave,\n  StaveNote\n} = VF;\nconst clefAndTimeWidth = 60;\nexport function Score({\n  staves = [],\n  clef = 'treble',\n  timeSignature = '4/4',\n  width = 1500,\n  height = 150\n}) {\n  _s();\n  const container = useRef();\n  const rendererRef = useRef();\n  useEffect(() => {\n    if (rendererRef.current == null) {\n      rendererRef.current = new Renderer(container.current, Renderer.Backends.SVG);\n    }\n    const renderer = rendererRef.current;\n    renderer.resize(width, height);\n    const context = renderer.getContext();\n    context.setFont('Arial', 10, '').setBackgroundFillStyle('#eed');\n    const staveWidth = (width - clefAndTimeWidth) / staves.length;\n    let currX = 0;\n    staves.forEach((notes, i) => {\n      const stave = new Stave(currX, 0, staveWidth);\n      if (i === 0) {\n        stave.setWidth(staveWidth + clefAndTimeWidth);\n        stave.addClef(clef).addTimeSignature(timeSignature);\n      }\n      currX += stave.getWidth();\n      stave.setContext(context).draw();\n      const processedNotes = notes.map(note => typeof note === 'string' ? {\n        key: note\n      } : note).map(note => Array.isArray(note) ? {\n        key: note[0],\n        duration: note[1]\n      } : note).map(({\n        key,\n        ...rest\n      }) => typeof key === 'string' ? {\n        key: key.includes('/') ? key : `${key[0]}/${key.slice(1)}`,\n        ...rest\n      } : rest).map(({\n        key,\n        keys,\n        duration = 'q'\n      }) => new StaveNote({\n        keys: key ? [key] : keys,\n        duration: String(duration)\n      }));\n      Formatter.FormatAndDraw(context, stave, processedNotes, {\n        auto_beam: true\n      });\n    });\n  }, [staves]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: container\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 10\n  }, this);\n}\n_s(Score, \"Oo94nw6YKmif0GbcQr28f6bFgJU=\");\n_c = Score;\nvar _c;\n$RefreshReg$(_c, \"Score\");","map":{"version":3,"names":["React","useRef","useEffect","VexFlow","jsxDEV","_jsxDEV","VF","Flow","Formatter","Renderer","Stave","StaveNote","clefAndTimeWidth","Score","staves","clef","timeSignature","width","height","_s","container","rendererRef","current","Backends","SVG","renderer","resize","context","getContext","setFont","setBackgroundFillStyle","staveWidth","length","currX","forEach","notes","i","stave","setWidth","addClef","addTimeSignature","getWidth","setContext","draw","processedNotes","map","note","key","Array","isArray","duration","rest","includes","slice","keys","String","FormatAndDraw","auto_beam","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/fitzpatrickcarl/my-musical-stairs-app/src/Components/Score.js"],"sourcesContent":["import React, { useRef, useEffect } from 'react'\nimport VexFlow from 'vexflow'\n\nconst VF = VexFlow.Flow\nconst { Formatter, Renderer, Stave, StaveNote } = VF\n\nconst clefAndTimeWidth = 60\n\nexport function Score({\n  staves = [],\n  clef = 'treble',\n  timeSignature = '4/4',\n  width = 1500,\n  height = 150,\n}) {\n  const container = useRef()\n  const rendererRef = useRef()\n\n  useEffect(() => {\n    if (rendererRef.current == null) {\n      rendererRef.current = new Renderer(\n        container.current,\n        Renderer.Backends.SVG\n      )\n    }\n    const renderer = rendererRef.current\n    renderer.resize(width, height)\n    const context = renderer.getContext()\n    context.setFont('Arial', 10, '').setBackgroundFillStyle('#eed')\n    const staveWidth = (width - clefAndTimeWidth) / staves.length\n\n    let currX = 0\n    staves.forEach((notes, i) => {\n      const stave = new Stave(currX, 0, staveWidth)\n      if (i === 0) {\n        stave.setWidth(staveWidth + clefAndTimeWidth)\n        stave.addClef(clef).addTimeSignature(timeSignature)\n      }\n      currX += stave.getWidth()\n      stave.setContext(context).draw()\n\n      const processedNotes = notes\n        .map(note => (typeof note === 'string' ? { key: note } : note))\n        .map(note =>\n          Array.isArray(note) ? { key: note[0], duration: note[1] } : note\n        )\n        .map(({ key, ...rest }) =>\n          typeof key === 'string'\n            ? {\n                key: key.includes('/') ? key : `${key[0]}/${key.slice(1)}`,\n                ...rest,\n              }\n            : rest\n        )\n        .map(\n          ({ key, keys, duration = 'q' }) =>\n            new StaveNote({\n              keys: key ? [key] : keys,\n              duration: String(duration),\n            })\n        )\n      Formatter.FormatAndDraw(context, stave, processedNotes, {\n        auto_beam: true,\n      })\n    })\n  }, [staves])\n\n  return <div ref={container} />\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}