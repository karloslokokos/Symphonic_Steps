{"ast":null,"code":"var _jsxFileName = \"/Users/fitzpatrickcarl/my-musical-stairs-app/src/Score.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect } from 'react';\nimport VexFlow from 'vexflow';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VF = VexFlow.Flow;\nconst {\n  Formatter,\n  Renderer,\n  Stave,\n  StaveNote\n} = VF;\nconst clefAndTimeWidth = 60;\nexport function Score({\n  staves = [],\n  clef = 'treble',\n  timeSignature = '4/4',\n  width = 500,\n  height = 150\n}) {\n  _s();\n  const container = useRef();\n  const rendererRef = useRef();\n  useEffect(() => {\n    if (rendererRef.current == null) {\n      rendererRef.current = new Renderer(container.current, Renderer.Backends.SVG);\n    }\n    const renderer = rendererRef.current;\n    renderer.resize(width, height);\n    const context = renderer.getContext();\n    context.setFont('Arial', 10, '').setBackgroundFillStyle('#eed');\n    const staveWidth = (width - clefAndTimeWidth) / 4; // 4 notes per bar\n\n    let currX = 0;\n    staves.forEach((notes, i) => {\n      const stave = new Stave(currX, 0, staveWidth);\n      stave.setContext(context);\n      if (i % 8 === 0) {\n        // Start a new line with clef and time signature every 8 bars\n        stave.setWidth(staveWidth + clefAndTimeWidth);\n        stave.addClef(clef).addTimeSignature(timeSignature);\n        currX += stave.getWidth();\n      } else {\n        currX += staveWidth;\n      }\n      stave.draw();\n      const processedNotes = notes.map(pitch => {\n        const [note, octave] = pitch.match(/[a-zA-Z]+|[0-9]+/g);\n        return new StaveNote({\n          keys: [`${note}/${octave}`],\n          duration: 'q'\n        });\n      });\n      Formatter.FormatAndDraw(context, stave, processedNotes, {\n        auto_beam: true\n      });\n    });\n  }, [staves]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: container\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 10\n  }, this);\n}\n_s(Score, \"Oo94nw6YKmif0GbcQr28f6bFgJU=\");\n_c = Score;\nvar _c;\n$RefreshReg$(_c, \"Score\");","map":{"version":3,"names":["React","useRef","useEffect","VexFlow","jsxDEV","_jsxDEV","VF","Flow","Formatter","Renderer","Stave","StaveNote","clefAndTimeWidth","Score","staves","clef","timeSignature","width","height","_s","container","rendererRef","current","Backends","SVG","renderer","resize","context","getContext","setFont","setBackgroundFillStyle","staveWidth","currX","forEach","notes","i","stave","setContext","setWidth","addClef","addTimeSignature","getWidth","draw","processedNotes","map","pitch","note","octave","match","keys","duration","FormatAndDraw","auto_beam","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/fitzpatrickcarl/my-musical-stairs-app/src/Score.js"],"sourcesContent":["import React, { useRef, useEffect } from 'react';\nimport VexFlow from 'vexflow';\n\nconst VF = VexFlow.Flow;\nconst { Formatter, Renderer, Stave, StaveNote } = VF;\n\nconst clefAndTimeWidth = 60;\n\nexport function Score({\n  staves = [],\n  clef = 'treble',\n  timeSignature = '4/4',\n  width = 500,\n  height = 150,\n}) {\n  const container = useRef();\n  const rendererRef = useRef();\n\n  useEffect(() => {\n    if (rendererRef.current == null) {\n      rendererRef.current = new Renderer(container.current, Renderer.Backends.SVG);\n    }\n\n    const renderer = rendererRef.current;\n    renderer.resize(width, height);\n    const context = renderer.getContext();\n    context.setFont('Arial', 10, '').setBackgroundFillStyle('#eed');\n\n    const staveWidth = (width - clefAndTimeWidth) / 4; // 4 notes per bar\n\n    let currX = 0;\n\n    staves.forEach((notes, i) => {\n      const stave = new Stave(currX, 0, staveWidth);\n      stave.setContext(context);\n\n      if (i % 8 === 0) {\n        // Start a new line with clef and time signature every 8 bars\n        stave.setWidth(staveWidth + clefAndTimeWidth);\n        stave.addClef(clef).addTimeSignature(timeSignature);\n        currX += stave.getWidth();\n      } else {\n        currX += staveWidth;\n      }\n\n      stave.draw();\n\n      const processedNotes = notes.map((pitch) => {\n        const [note, octave] = pitch.match(/[a-zA-Z]+|[0-9]+/g);\n        return new StaveNote({\n          keys: [`${note}/${octave}`],\n          duration: 'q',\n        });\n      });\n\n      Formatter.FormatAndDraw(context, stave, processedNotes, {\n        auto_beam: true,\n      });\n    });\n  }, [staves]);\n\n  return <div ref={container} />;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}