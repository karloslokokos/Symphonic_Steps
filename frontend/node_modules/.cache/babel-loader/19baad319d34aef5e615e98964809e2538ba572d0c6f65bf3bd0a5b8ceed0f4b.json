{"ast":null,"code":"var _jsxFileName = \"/Users/fitzpatrickcarl/my-musical-stairs-app/src/MusicVisualiser.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport axios from 'axios'; // Import axios for making HTTP requests\nimport { Factory } from 'vexflow';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MusicVisualizer = () => {\n  _s();\n  const isInitialMount = useRef(true);\n  const vf = useRef(null);\n  const [noteData, setNoteData] = useState([]);\n  useEffect(() => {\n    // Skip the effect on hot updates\n    if (!isInitialMount.current) {\n      return;\n    }\n\n    // Fetch note data from your API\n    axios.get('http://localhost:5000/get_note_data') // Use correct API endpoint\n    .then(response => {\n      const fetchedNoteData = response.data.notes;\n      if (Array.isArray(fetchedNoteData)) {\n        setNoteData(fetchedNoteData);\n\n        // Create the VexFlow instance\n        vf.current = new Factory({\n          renderer: {\n            elementId: 'output',\n            width: 500,\n            height: 200\n          }\n        });\n        const score = vf.current.EasyScore();\n        const system = vf.current.System();\n\n        // Assuming noteData is an array of note strings like ['C#5/q', 'B4', 'A4', 'G#4']\n        system.addStave({\n          voices: [score.voice(score.notes(...fetchedNoteData))]\n        }).addClef('treble').addTimeSignature('4/4');\n        vf.current.draw();\n        isInitialMount.current = false;\n      } else {\n        console.error('Invalid note data format:', fetchedNoteData);\n      }\n    }).catch(error => {\n      console.error('Error fetching notes:', error);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Music Notation\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"output\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n_s(MusicVisualizer, \"Kveab1f+fOdzipkqustW5+yd3mo=\");\n_c = MusicVisualizer;\nexport default MusicVisualizer;\nvar _c;\n$RefreshReg$(_c, \"MusicVisualizer\");","map":{"version":3,"names":["React","useEffect","useRef","useState","axios","Factory","jsxDEV","_jsxDEV","MusicVisualizer","_s","isInitialMount","vf","noteData","setNoteData","current","get","then","response","fetchedNoteData","data","notes","Array","isArray","renderer","elementId","width","height","score","EasyScore","system","System","addStave","voices","voice","addClef","addTimeSignature","draw","console","error","catch","children","fileName","_jsxFileName","lineNumber","columnNumber","id","_c","$RefreshReg$"],"sources":["/Users/fitzpatrickcarl/my-musical-stairs-app/src/MusicVisualiser.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport axios from 'axios'; // Import axios for making HTTP requests\nimport { Factory } from 'vexflow';\n\nconst MusicVisualizer = () => {\n  const isInitialMount = useRef(true);\n  const vf = useRef(null);\n  const [noteData, setNoteData] = useState([]);\n\n  useEffect(() => {\n    // Skip the effect on hot updates\n    if (!isInitialMount.current) {\n      return;\n    }\n\n    // Fetch note data from your API\n    axios\n      .get('http://localhost:5000/get_note_data') // Use correct API endpoint\n      .then((response) => {\n        const fetchedNoteData = response.data.notes;\n\n        if (Array.isArray(fetchedNoteData)) {\n          setNoteData(fetchedNoteData);\n\n          // Create the VexFlow instance\n          vf.current = new Factory({\n            renderer: { elementId: 'output', width: 500, height: 200 },\n          });\n\n          const score = vf.current.EasyScore();\n          const system = vf.current.System();\n\n          // Assuming noteData is an array of note strings like ['C#5/q', 'B4', 'A4', 'G#4']\n          system\n            .addStave({\n              voices: [score.voice(score.notes(...fetchedNoteData))],\n            })\n            .addClef('treble')\n            .addTimeSignature('4/4');\n\n          vf.current.draw();\n\n          isInitialMount.current = false;\n        } else {\n          console.error('Invalid note data format:', fetchedNoteData);\n        }\n      })\n      .catch((error) => {\n        console.error('Error fetching notes:', error);\n      });\n  }, []);\n\n  return (\n    <div>\n      <h2>Music Notation</h2>\n      <div id=\"output\"></div>\n    </div>\n  );\n};\n\nexport default MusicVisualizer;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAC1D,OAAOC,KAAK,MAAM,OAAO,CAAC,CAAC;AAC3B,SAASC,OAAO,QAAQ,SAAS;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAMC,cAAc,GAAGR,MAAM,CAAC,IAAI,CAAC;EACnC,MAAMS,EAAE,GAAGT,MAAM,CAAC,IAAI,CAAC;EACvB,MAAM,CAACU,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAE5CF,SAAS,CAAC,MAAM;IACd;IACA,IAAI,CAACS,cAAc,CAACI,OAAO,EAAE;MAC3B;IACF;;IAEA;IACAV,KAAK,CACFW,GAAG,CAAC,qCAAqC,CAAC,CAAC;IAAA,CAC3CC,IAAI,CAAEC,QAAQ,IAAK;MAClB,MAAMC,eAAe,GAAGD,QAAQ,CAACE,IAAI,CAACC,KAAK;MAE3C,IAAIC,KAAK,CAACC,OAAO,CAACJ,eAAe,CAAC,EAAE;QAClCL,WAAW,CAACK,eAAe,CAAC;;QAE5B;QACAP,EAAE,CAACG,OAAO,GAAG,IAAIT,OAAO,CAAC;UACvBkB,QAAQ,EAAE;YAAEC,SAAS,EAAE,QAAQ;YAAEC,KAAK,EAAE,GAAG;YAAEC,MAAM,EAAE;UAAI;QAC3D,CAAC,CAAC;QAEF,MAAMC,KAAK,GAAGhB,EAAE,CAACG,OAAO,CAACc,SAAS,CAAC,CAAC;QACpC,MAAMC,MAAM,GAAGlB,EAAE,CAACG,OAAO,CAACgB,MAAM,CAAC,CAAC;;QAElC;QACAD,MAAM,CACHE,QAAQ,CAAC;UACRC,MAAM,EAAE,CAACL,KAAK,CAACM,KAAK,CAACN,KAAK,CAACP,KAAK,CAAC,GAAGF,eAAe,CAAC,CAAC;QACvD,CAAC,CAAC,CACDgB,OAAO,CAAC,QAAQ,CAAC,CACjBC,gBAAgB,CAAC,KAAK,CAAC;QAE1BxB,EAAE,CAACG,OAAO,CAACsB,IAAI,CAAC,CAAC;QAEjB1B,cAAc,CAACI,OAAO,GAAG,KAAK;MAChC,CAAC,MAAM;QACLuB,OAAO,CAACC,KAAK,CAAC,2BAA2B,EAAEpB,eAAe,CAAC;MAC7D;IACF,CAAC,CAAC,CACDqB,KAAK,CAAED,KAAK,IAAK;MAChBD,OAAO,CAACC,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;IAC/C,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,oBACE/B,OAAA;IAAAiC,QAAA,gBACEjC,OAAA;MAAAiC,QAAA,EAAI;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACvBrC,OAAA;MAAKsC,EAAE,EAAC;IAAQ;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpB,CAAC;AAEV,CAAC;AAACnC,EAAA,CAtDID,eAAe;AAAAsC,EAAA,GAAftC,eAAe;AAwDrB,eAAeA,eAAe;AAAC,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}