{"ast":null,"code":"var _jsxFileName = \"/Users/fitzpatrickcarl/Documents/project-root/frontend/src/Components/MusicVisualiser.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { getSocket } from './SocketService'; // Adjust the import path as necessary\nimport { Score } from './Score';\nimport BsNav from '../Containers/BsNav';\nimport '../styles/MusicVisualiser.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MusicVisualiser = () => {\n  _s();\n  const [noteData, setNoteData] = useState([]);\n  const [renderKey, setRenderKey] = useState(0); // New state for controlling re-render\n  const apiUrl = process.env.REACT_APP_API_BASE_URL;\n\n  // Function to fetch note data\n  const fetchNotes = async () => {\n    try {\n      const response = await axios.get(`${apiUrl}/get_note_data?limit=16`);\n      setNoteData(response.data);\n      console.log('Note data fetched');\n    } catch (error) {\n      console.error('Error fetching note data:', error);\n    }\n  };\n  useEffect(() => {\n    fetchNotes(); // Fetch initial note data\n    const socket = getSocket(); // Assume this gets the singleton socket instance\n\n    // Listen for the signal indicating new data is available\n    socket.on('note_update', () => {\n      console.log('New note data signal received');\n      fetchNotes(); // Fetch latest notes\n      setRenderKey(prevKey => prevKey + 1); // Increment key to trigger re-render\n    });\n\n    return () => {\n      socket.off('note_update');\n    };\n  }, []); // Empty dependency array means this effect runs once on mount\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"MainPage-page\",\n    children: [\" \", /*#__PURE__*/_jsxDEV(BsNav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"centered-content\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"score-container\",\n        children: /*#__PURE__*/_jsxDEV(Score, {\n          className: \"Score\",\n          staves: noteData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, renderKey, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(MusicVisualiser, \"HgQBK7PvBog5kavzeuc7+GYcQCo=\");\n_c = MusicVisualiser;\nexport default MusicVisualiser;\nvar _c;\n$RefreshReg$(_c, \"MusicVisualiser\");","map":{"version":3,"names":["React","useState","useEffect","axios","getSocket","Score","BsNav","jsxDEV","_jsxDEV","MusicVisualiser","_s","noteData","setNoteData","renderKey","setRenderKey","apiUrl","process","env","REACT_APP_API_BASE_URL","fetchNotes","response","get","data","console","log","error","socket","on","prevKey","off","className","children","fileName","_jsxFileName","lineNumber","columnNumber","staves","_c","$RefreshReg$"],"sources":["/Users/fitzpatrickcarl/Documents/project-root/frontend/src/Components/MusicVisualiser.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { getSocket } from './SocketService'; // Adjust the import path as necessary\nimport { Score } from './Score';\nimport BsNav from '../Containers/BsNav';\nimport '../styles/MusicVisualiser.css';\n\nconst MusicVisualiser = () => {\n  const [noteData, setNoteData] = useState([]);\n  const [renderKey, setRenderKey] = useState(0); // New state for controlling re-render\n  const apiUrl = process.env.REACT_APP_API_BASE_URL;\n  \n  // Function to fetch note data\n  const fetchNotes = async () => {\n    try {\n      const response = await axios.get(`${apiUrl}/get_note_data?limit=16`);\n      setNoteData(response.data);\n      console.log('Note data fetched');\n    } catch (error) {\n      console.error('Error fetching note data:', error);\n    }\n  };\n\n  useEffect(() => {\n    fetchNotes(); // Fetch initial note data\n    const socket = getSocket(); // Assume this gets the singleton socket instance\n    \n    // Listen for the signal indicating new data is available\n    socket.on('note_update', () => {\n      console.log('New note data signal received');\n      fetchNotes(); // Fetch latest notes\n      setRenderKey(prevKey => prevKey + 1); // Increment key to trigger re-render\n    });\n\n    return () => {\n      socket.off('note_update');\n    };\n  }, []); // Empty dependency array means this effect runs once on mount\n\n  return (\n    <div key={renderKey} className=\"MainPage-page\"> {/* Use key to force re-render */}\n      <BsNav />\n      <div className=\"centered-content\">\n        <div className=\"score-container\">\n          <Score className=\"Score\" staves={noteData} />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default MusicVisualiser;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,iBAAiB,CAAC,CAAC;AAC7C,SAASC,KAAK,QAAQ,SAAS;AAC/B,OAAOC,KAAK,MAAM,qBAAqB;AACvC,OAAO,+BAA+B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACY,SAAS,EAAEC,YAAY,CAAC,GAAGb,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;EAC/C,MAAMc,MAAM,GAAGC,OAAO,CAACC,GAAG,CAACC,sBAAsB;;EAEjD;EACA,MAAMC,UAAU,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMjB,KAAK,CAACkB,GAAG,CAAE,GAAEN,MAAO,yBAAwB,CAAC;MACpEH,WAAW,CAACQ,QAAQ,CAACE,IAAI,CAAC;MAC1BC,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAC;IAClC,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdF,OAAO,CAACE,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;IACnD;EACF,CAAC;EAEDvB,SAAS,CAAC,MAAM;IACdiB,UAAU,CAAC,CAAC,CAAC,CAAC;IACd,MAAMO,MAAM,GAAGtB,SAAS,CAAC,CAAC,CAAC,CAAC;;IAE5B;IACAsB,MAAM,CAACC,EAAE,CAAC,aAAa,EAAE,MAAM;MAC7BJ,OAAO,CAACC,GAAG,CAAC,+BAA+B,CAAC;MAC5CL,UAAU,CAAC,CAAC,CAAC,CAAC;MACdL,YAAY,CAACc,OAAO,IAAIA,OAAO,GAAG,CAAC,CAAC,CAAC,CAAC;IACxC,CAAC,CAAC;;IAEF,OAAO,MAAM;MACXF,MAAM,CAACG,GAAG,CAAC,aAAa,CAAC;IAC3B,CAAC;EACH,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,oBACErB,OAAA;IAAqBsB,SAAS,EAAC,eAAe;IAAAC,QAAA,GAAC,GAAC,eAC9CvB,OAAA,CAACF,KAAK;MAAA0B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACT3B,OAAA;MAAKsB,SAAS,EAAC,kBAAkB;MAAAC,QAAA,eAC/BvB,OAAA;QAAKsB,SAAS,EAAC,iBAAiB;QAAAC,QAAA,eAC9BvB,OAAA,CAACH,KAAK;UAACyB,SAAS,EAAC,OAAO;UAACM,MAAM,EAAEzB;QAAS;UAAAqB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1C;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA,GANEtB,SAAS;IAAAmB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAOd,CAAC;AAEV,CAAC;AAACzB,EAAA,CA1CID,eAAe;AAAA4B,EAAA,GAAf5B,eAAe;AA4CrB,eAAeA,eAAe;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}