{"ast":null,"code":"import { Element } from './element.js';\nimport { Font, FontStyle, FontWeight } from './font.js';\nimport { Renderer } from './renderer.js';\nimport { Tables } from './tables.js';\nimport { log, RuntimeError } from './util.js';\nfunction L() {\n  for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n  if (TextBracket.DEBUG) log('Vex.Flow.TextBracket', args);\n}\nexport var TextBracketPosition;\n(function (TextBracketPosition) {\n  TextBracketPosition[TextBracketPosition[\"TOP\"] = 1] = \"TOP\";\n  TextBracketPosition[TextBracketPosition[\"BOTTOM\"] = -1] = \"BOTTOM\";\n})(TextBracketPosition || (TextBracketPosition = {}));\nclass TextBracket extends Element {\n  static get CATEGORY() {\n    return \"TextBracket\";\n  }\n  static get Position() {\n    return TextBracketPosition;\n  }\n  static get PositionString() {\n    return {\n      top: TextBracketPosition.TOP,\n      bottom: TextBracketPosition.BOTTOM\n    };\n  }\n  static get Positions() {\n    L('Positions is deprecated, use TextBracketPosition instead.');\n    return TextBracketPosition;\n  }\n  static get PositionsString() {\n    L('PositionsString is deprecated, use PositionString instead.');\n    return TextBracket.PositionString;\n  }\n  constructor(_ref) {\n    let {\n      start,\n      stop,\n      text = '',\n      superscript = '',\n      position = TextBracketPosition.TOP\n    } = _ref;\n    super();\n    this.start = start;\n    this.stop = stop;\n    this.text = text;\n    this.superscript = superscript;\n    this.position = typeof position === 'string' ? TextBracket.PositionString[position] : position;\n    this.line = 1;\n    this.resetFont();\n    this.render_options = {\n      dashed: true,\n      dash: [5],\n      color: 'black',\n      line_width: 1,\n      show_bracket: true,\n      bracket_height: 8,\n      underline_superscript: true\n    };\n  }\n  applyStyle(ctx) {\n    ctx.setFont(this.font);\n    const options = this.render_options;\n    ctx.setStrokeStyle(options.color);\n    ctx.setFillStyle(options.color);\n    ctx.setLineWidth(options.line_width);\n    return this;\n  }\n  setDashed(dashed, dash) {\n    this.render_options.dashed = dashed;\n    if (dash) this.render_options.dash = dash;\n    return this;\n  }\n  setLine(line) {\n    this.line = line;\n    return this;\n  }\n  draw() {\n    const ctx = this.checkContext();\n    this.setRendered();\n    let y = 0;\n    switch (this.position) {\n      case TextBracketPosition.TOP:\n        y = this.start.checkStave().getYForTopText(this.line);\n        break;\n      case TextBracketPosition.BOTTOM:\n        y = this.start.checkStave().getYForBottomText(this.line + Tables.TEXT_HEIGHT_OFFSET_HACK);\n        break;\n      default:\n        throw new RuntimeError('InvalidPosition', \"The position \".concat(this.position, \" is invalid.\"));\n    }\n    const start = {\n      x: this.start.getAbsoluteX(),\n      y\n    };\n    const stop = {\n      x: this.stop.getAbsoluteX(),\n      y\n    };\n    L('Rendering TextBracket: start:', start, 'stop:', stop, 'y:', y);\n    const bracket_height = this.render_options.bracket_height * this.position;\n    ctx.save();\n    this.applyStyle(ctx);\n    ctx.fillText(this.text, start.x, start.y);\n    const main_measure = ctx.measureText(this.text);\n    const main_width = main_measure.width;\n    const main_height = main_measure.height;\n    const super_y = start.y - main_height / 2.5;\n    const {\n      family,\n      size,\n      weight,\n      style\n    } = this.textFont;\n    const smallerFontSize = Font.scaleSize(size, 0.714286);\n    ctx.setFont(family, smallerFontSize, weight, style);\n    ctx.fillText(this.superscript, start.x + main_width + 1, super_y);\n    const super_measure = ctx.measureText(this.superscript);\n    const super_width = super_measure.width;\n    const super_height = super_measure.height;\n    let start_x = start.x;\n    let line_y = super_y;\n    const end_x = stop.x + this.stop.getGlyphProps().getWidth();\n    if (this.position === TextBracketPosition.TOP) {\n      start_x += main_width + super_width + 5;\n      line_y -= super_height / 2.7;\n    } else if (this.position === TextBracketPosition.BOTTOM) {\n      line_y += super_height / 2.7;\n      start_x += main_width + 2;\n      if (!this.render_options.underline_superscript) {\n        start_x += super_width;\n      }\n    }\n    if (this.render_options.dashed) {\n      Renderer.drawDashedLine(ctx, start_x, line_y, end_x, line_y, this.render_options.dash);\n      if (this.render_options.show_bracket) {\n        Renderer.drawDashedLine(ctx, end_x, line_y + 1 * this.position, end_x, line_y + bracket_height, this.render_options.dash);\n      }\n    } else {\n      ctx.beginPath();\n      ctx.moveTo(start_x, line_y);\n      ctx.lineTo(end_x, line_y);\n      if (this.render_options.show_bracket) {\n        ctx.lineTo(end_x, line_y + bracket_height);\n      }\n      ctx.stroke();\n      ctx.closePath();\n    }\n    ctx.restore();\n  }\n}\nTextBracket.DEBUG = false;\nTextBracket.TEXT_FONT = {\n  family: Font.SERIF,\n  size: 15,\n  weight: FontWeight.NORMAL,\n  style: FontStyle.ITALIC\n};\nexport { TextBracket };","map":{"version":3,"names":["Element","Font","FontStyle","FontWeight","Renderer","Tables","log","RuntimeError","L","_len","arguments","length","args","Array","_key","TextBracket","DEBUG","TextBracketPosition","CATEGORY","Position","PositionString","top","TOP","bottom","BOTTOM","Positions","PositionsString","constructor","_ref","start","stop","text","superscript","position","line","resetFont","render_options","dashed","dash","color","line_width","show_bracket","bracket_height","underline_superscript","applyStyle","ctx","setFont","font","options","setStrokeStyle","setFillStyle","setLineWidth","setDashed","setLine","draw","checkContext","setRendered","y","checkStave","getYForTopText","getYForBottomText","TEXT_HEIGHT_OFFSET_HACK","concat","x","getAbsoluteX","save","fillText","main_measure","measureText","main_width","width","main_height","height","super_y","family","size","weight","style","textFont","smallerFontSize","scaleSize","super_measure","super_width","super_height","start_x","line_y","end_x","getGlyphProps","getWidth","drawDashedLine","beginPath","moveTo","lineTo","stroke","closePath","restore","TEXT_FONT","SERIF","NORMAL","ITALIC"],"sources":["/Users/fitzpatrickcarl/Documents/project-root/frontend/node_modules/vexflow/build/esm/src/textbracket.js"],"sourcesContent":["import { Element } from './element.js';\nimport { Font, FontStyle, FontWeight } from './font.js';\nimport { Renderer } from './renderer.js';\nimport { Tables } from './tables.js';\nimport { log, RuntimeError } from './util.js';\nfunction L(...args) {\n    if (TextBracket.DEBUG)\n        log('Vex.Flow.TextBracket', args);\n}\nexport var TextBracketPosition;\n(function (TextBracketPosition) {\n    TextBracketPosition[TextBracketPosition[\"TOP\"] = 1] = \"TOP\";\n    TextBracketPosition[TextBracketPosition[\"BOTTOM\"] = -1] = \"BOTTOM\";\n})(TextBracketPosition || (TextBracketPosition = {}));\nclass TextBracket extends Element {\n    static get CATEGORY() {\n        return \"TextBracket\";\n    }\n    static get Position() {\n        return TextBracketPosition;\n    }\n    static get PositionString() {\n        return {\n            top: TextBracketPosition.TOP,\n            bottom: TextBracketPosition.BOTTOM,\n        };\n    }\n    static get Positions() {\n        L('Positions is deprecated, use TextBracketPosition instead.');\n        return TextBracketPosition;\n    }\n    static get PositionsString() {\n        L('PositionsString is deprecated, use PositionString instead.');\n        return TextBracket.PositionString;\n    }\n    constructor({ start, stop, text = '', superscript = '', position = TextBracketPosition.TOP }) {\n        super();\n        this.start = start;\n        this.stop = stop;\n        this.text = text;\n        this.superscript = superscript;\n        this.position = typeof position === 'string' ? TextBracket.PositionString[position] : position;\n        this.line = 1;\n        this.resetFont();\n        this.render_options = {\n            dashed: true,\n            dash: [5],\n            color: 'black',\n            line_width: 1,\n            show_bracket: true,\n            bracket_height: 8,\n            underline_superscript: true,\n        };\n    }\n    applyStyle(ctx) {\n        ctx.setFont(this.font);\n        const options = this.render_options;\n        ctx.setStrokeStyle(options.color);\n        ctx.setFillStyle(options.color);\n        ctx.setLineWidth(options.line_width);\n        return this;\n    }\n    setDashed(dashed, dash) {\n        this.render_options.dashed = dashed;\n        if (dash)\n            this.render_options.dash = dash;\n        return this;\n    }\n    setLine(line) {\n        this.line = line;\n        return this;\n    }\n    draw() {\n        const ctx = this.checkContext();\n        this.setRendered();\n        let y = 0;\n        switch (this.position) {\n            case TextBracketPosition.TOP:\n                y = this.start.checkStave().getYForTopText(this.line);\n                break;\n            case TextBracketPosition.BOTTOM:\n                y = this.start.checkStave().getYForBottomText(this.line + Tables.TEXT_HEIGHT_OFFSET_HACK);\n                break;\n            default:\n                throw new RuntimeError('InvalidPosition', `The position ${this.position} is invalid.`);\n        }\n        const start = { x: this.start.getAbsoluteX(), y };\n        const stop = { x: this.stop.getAbsoluteX(), y };\n        L('Rendering TextBracket: start:', start, 'stop:', stop, 'y:', y);\n        const bracket_height = this.render_options.bracket_height * this.position;\n        ctx.save();\n        this.applyStyle(ctx);\n        ctx.fillText(this.text, start.x, start.y);\n        const main_measure = ctx.measureText(this.text);\n        const main_width = main_measure.width;\n        const main_height = main_measure.height;\n        const super_y = start.y - main_height / 2.5;\n        const { family, size, weight, style } = this.textFont;\n        const smallerFontSize = Font.scaleSize(size, 0.714286);\n        ctx.setFont(family, smallerFontSize, weight, style);\n        ctx.fillText(this.superscript, start.x + main_width + 1, super_y);\n        const super_measure = ctx.measureText(this.superscript);\n        const super_width = super_measure.width;\n        const super_height = super_measure.height;\n        let start_x = start.x;\n        let line_y = super_y;\n        const end_x = stop.x + this.stop.getGlyphProps().getWidth();\n        if (this.position === TextBracketPosition.TOP) {\n            start_x += main_width + super_width + 5;\n            line_y -= super_height / 2.7;\n        }\n        else if (this.position === TextBracketPosition.BOTTOM) {\n            line_y += super_height / 2.7;\n            start_x += main_width + 2;\n            if (!this.render_options.underline_superscript) {\n                start_x += super_width;\n            }\n        }\n        if (this.render_options.dashed) {\n            Renderer.drawDashedLine(ctx, start_x, line_y, end_x, line_y, this.render_options.dash);\n            if (this.render_options.show_bracket) {\n                Renderer.drawDashedLine(ctx, end_x, line_y + 1 * this.position, end_x, line_y + bracket_height, this.render_options.dash);\n            }\n        }\n        else {\n            ctx.beginPath();\n            ctx.moveTo(start_x, line_y);\n            ctx.lineTo(end_x, line_y);\n            if (this.render_options.show_bracket) {\n                ctx.lineTo(end_x, line_y + bracket_height);\n            }\n            ctx.stroke();\n            ctx.closePath();\n        }\n        ctx.restore();\n    }\n}\nTextBracket.DEBUG = false;\nTextBracket.TEXT_FONT = {\n    family: Font.SERIF,\n    size: 15,\n    weight: FontWeight.NORMAL,\n    style: FontStyle.ITALIC,\n};\nexport { TextBracket };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}