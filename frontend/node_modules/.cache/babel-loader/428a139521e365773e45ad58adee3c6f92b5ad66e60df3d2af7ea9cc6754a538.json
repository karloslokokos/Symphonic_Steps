{"ast":null,"code":"var _jsxFileName = \"/Users/fitzpatrickcarl/my-musical-stairs-app/src/Score.js\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect } from 'react';\nimport VexFlow from 'vexflow';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VF = VexFlow.Flow;\nconst {\n  Formatter,\n  Renderer,\n  Stave,\n  StaveNote\n} = VF;\nconst clefAndTimeWidth = 60;\nconst notesPerStave = 32;\nexport function Score({\n  staves = [],\n  clef = 'treble',\n  timeSignature = '4/4',\n  width = 1000,\n  height = 150\n}) {\n  _s();\n  const container = useRef();\n  const rendererRef = useRef();\n  useEffect(() => {\n    if (rendererRef.current == null) {\n      rendererRef.current = new Renderer(container.current, Renderer.Backends.SVG);\n    }\n    const renderer = rendererRef.current;\n    renderer.resize(width, height);\n    const context = renderer.getContext();\n    context.setFont('Arial', 10, '').setBackgroundFillStyle('#eed');\n    let currX = 0;\n    staves.forEach((staveNotes, i) => {\n      const staveWidth = (width - clefAndTimeWidth) / staves.length;\n      const stave = new Stave(currX, i * height, staveWidth); // Updated Y position\n\n      if (i === 0) {\n        stave.setWidth(staveWidth + clefAndTimeWidth);\n        stave.addClef(clef).addTimeSignature(timeSignature);\n      }\n      currX += stave.getWidth();\n      stave.setContext(context).draw();\n      const processedNotes = staveNotes.map(noteWithOctave => {\n        const [note, octave] = noteWithOctave.match(/[a-zA-Z]+|[0-9]+/g);\n        return new StaveNote({\n          keys: [`${note}/${octave}`],\n          duration: 'q' // Assuming quarter note duration\n        });\n      });\n\n      Formatter.FormatAndDraw(context, stave, processedNotes, {\n        auto_beam: true\n      });\n    });\n  }, [staves, clef, timeSignature, width, height]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: container\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 10\n  }, this);\n}\n_s(Score, \"Oo94nw6YKmif0GbcQr28f6bFgJU=\");\n_c = Score;\nvar _c;\n$RefreshReg$(_c, \"Score\");","map":{"version":3,"names":["React","useRef","useEffect","VexFlow","jsxDEV","_jsxDEV","VF","Flow","Formatter","Renderer","Stave","StaveNote","clefAndTimeWidth","notesPerStave","Score","staves","clef","timeSignature","width","height","_s","container","rendererRef","current","Backends","SVG","renderer","resize","context","getContext","setFont","setBackgroundFillStyle","currX","forEach","staveNotes","i","staveWidth","length","stave","setWidth","addClef","addTimeSignature","getWidth","setContext","draw","processedNotes","map","noteWithOctave","note","octave","match","keys","duration","FormatAndDraw","auto_beam","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/fitzpatrickcarl/my-musical-stairs-app/src/Score.js"],"sourcesContent":["import React, { useRef, useEffect } from 'react';\nimport VexFlow from 'vexflow';\n\nconst VF = VexFlow.Flow;\nconst { Formatter, Renderer, Stave, StaveNote } = VF;\n\nconst clefAndTimeWidth = 60;\nconst notesPerStave = 32;\n\nexport function Score({\n  staves = [],\n  clef = 'treble',\n  timeSignature = '4/4',\n  width = 1000,\n  height = 150,\n}) {\n  const container = useRef();\n  const rendererRef = useRef();\n\n  useEffect(() => {\n    if (rendererRef.current == null) {\n      rendererRef.current = new Renderer(container.current, Renderer.Backends.SVG);\n    }\n    const renderer = rendererRef.current;\n    renderer.resize(width, height);\n    const context = renderer.getContext();\n    context.setFont('Arial', 10, '').setBackgroundFillStyle('#eed');\n\n    let currX = 0;\n\n    staves.forEach((staveNotes, i) => {\n      const staveWidth = (width - clefAndTimeWidth) / staves.length;\n      const stave = new Stave(currX, i * height, staveWidth); // Updated Y position\n\n      if (i === 0) {\n        stave.setWidth(staveWidth + clefAndTimeWidth);\n        stave.addClef(clef).addTimeSignature(timeSignature);\n      }\n\n      currX += stave.getWidth();\n      stave.setContext(context).draw();\n\n      const processedNotes = staveNotes.map((noteWithOctave) => {\n        const [note, octave] = noteWithOctave.match(/[a-zA-Z]+|[0-9]+/g);\n        return new StaveNote({\n          keys: [`${note}/${octave}`],\n          duration: 'q', // Assuming quarter note duration\n        });\n      });\n\n      Formatter.FormatAndDraw(context, stave, processedNotes, {\n        auto_beam: true,\n      });\n    });\n  }, [staves, clef, timeSignature, width, height]);\n\n  return <div ref={container} />;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}