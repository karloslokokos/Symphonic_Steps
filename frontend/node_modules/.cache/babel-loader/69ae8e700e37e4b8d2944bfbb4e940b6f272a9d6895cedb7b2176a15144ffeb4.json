{"ast":null,"code":"var _jsxFileName = \"/Users/fitzpatrickcarl/Documents/project-root/frontend/src/Components/TheoryTrainer.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport BsNav from '../Containers/BsNav';\nimport '../styles/TheoryTrainer.css';\nimport major2nd from '../img/major2nd.png';\nimport major3rd from '../img/major3rd.png';\nimport perfect4th from '../img/perfect4th.png';\nimport perfect5th from '../img/perfect5th.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TheoryTrainer = () => {\n  _s();\n  const allTasks = [{\n    name: 'Perfect 5th',\n    notes: ['C4', 'G4']\n  }, {\n    name: 'Major 3rd',\n    notes: ['C3', 'E3']\n  }, {\n    name: 'Perfect 4th',\n    notes: ['C4', 'F4']\n  }, {\n    name: 'Major 2nd',\n    notes: ['C4', 'D4']\n  }];\n  const taskImages = {\n    'Perfect 5th': perfect5th,\n    'Major 3rd': major3rd,\n    'Perfect 4th': perfect4th,\n    'Major 2nd': major2nd\n  };\n  const [completedTasks, setCompletedTasks] = useState([]);\n  const [currentTask, setCurrentTask] = useState(null);\n  const [score, setScore] = useState(0);\n  const [gameOver, setGameOver] = useState(false);\n  const apiUrl = process.env.REACT_APP_API_BASE_URL;\n  const generateRandomTask = () => {\n    let remainingTasks = allTasks.filter(task => !completedTasks.includes(task.name));\n    if (remainingTasks.length === 0) {\n      setGameOver(true);\n      return;\n    }\n    const randomIndex = Math.floor(Math.random() * remainingTasks.length);\n    const newTask = remainingTasks[randomIndex];\n    setCurrentTask(newTask);\n    setCompletedTasks(prevTasks => [...prevTasks, newTask.name]);\n  };\n  const confirmInput = async () => {\n    try {\n      const response = await axios.get(`${apiUrl}/api/get_note_data`, {\n        params: {\n          limit: 2\n        }\n      });\n      const fetchedNotes = response.data;\n      const isValid = fetchedNotes.some(group => {\n        const taskNotesStr = currentTask.notes.sort().join(',');\n        const groupStr = group.sort().join(',');\n        return taskNotesStr === groupStr;\n      });\n      console.log(\"Fetched Notes:\", fetchedNotes);\n      console.log(\"Is Valid:\", isValid);\n      if (isValid) {\n        alert(\"Correct! Moving to the next task.\");\n        setScore(prevScore => prevScore + 1);\n      } else {\n        alert(\"Incorrect. Moving to the next task.\");\n      }\n      generateRandomTask();\n    } catch (error) {\n      console.error(\"Error fetching note data:\", error);\n    }\n  };\n  const getScoreMessage = score => {\n    switch (score) {\n      case 1:\n        return \"You scored 25%, you need to work on your theory!\";\n      case 2:\n        return \"You scored 50%, not bad but keep studying!\";\n      case 3:\n        return \"You scored 75%, good work, you're nearly an expert!\";\n      case 4:\n        return \"You scored 100%, you are a music theory expert!\";\n      default:\n        return \"\";\n    }\n  };\n  useState(() => {\n    generateRandomTask();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"musical-stairs-game\",\n    children: [/*#__PURE__*/_jsxDEV(BsNav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Play the Musical Stairs Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), currentTask ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"task-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Play the following interval on the stairs: \", currentTask.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"image-container\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: taskImages[currentTask.name],\n            alt: currentTask.name,\n            className: \"task-image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"button-container\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"validate-task-btn\",\n            onClick: confirmInput,\n            children: \"Confirm Answer!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading task...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Score: \", score]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), gameOver && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-over-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: getScoreMessage(score)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"restart-game-btn\",\n          onClick: () => window.location.reload(),\n          children: \"Restart Game\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n};\n_s(TheoryTrainer, \"fJHQN8+6hPZFfDyh/fXvBtjH120=\");\n_c = TheoryTrainer;\nexport default TheoryTrainer;\nvar _c;\n$RefreshReg$(_c, \"TheoryTrainer\");","map":{"version":3,"names":["React","useState","axios","BsNav","major2nd","major3rd","perfect4th","perfect5th","jsxDEV","_jsxDEV","TheoryTrainer","_s","allTasks","name","notes","taskImages","completedTasks","setCompletedTasks","currentTask","setCurrentTask","score","setScore","gameOver","setGameOver","apiUrl","process","env","REACT_APP_API_BASE_URL","generateRandomTask","remainingTasks","filter","task","includes","length","randomIndex","Math","floor","random","newTask","prevTasks","confirmInput","response","get","params","limit","fetchedNotes","data","isValid","some","group","taskNotesStr","sort","join","groupStr","console","log","alert","prevScore","error","getScoreMessage","className","children","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","onClick","window","location","reload","_c","$RefreshReg$"],"sources":["/Users/fitzpatrickcarl/Documents/project-root/frontend/src/Components/TheoryTrainer.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport BsNav from '../Containers/BsNav';\nimport '../styles/TheoryTrainer.css';\nimport major2nd from '../img/major2nd.png';\nimport major3rd from '../img/major3rd.png';\nimport perfect4th from '../img/perfect4th.png';\nimport perfect5th from '../img/perfect5th.png';\n\nconst TheoryTrainer = () => {\n  const allTasks = [\n    { name: 'Perfect 5th', notes: ['C4', 'G4'] },\n    { name: 'Major 3rd', notes: ['C3', 'E3'] },\n    { name: 'Perfect 4th', notes: ['C4', 'F4'] },\n    { name: 'Major 2nd', notes: ['C4', 'D4'] },\n  ];\n\n  const taskImages = {\n    'Perfect 5th': perfect5th,\n    'Major 3rd': major3rd,\n    'Perfect 4th': perfect4th,\n    'Major 2nd': major2nd,\n  };\n\n  const [completedTasks, setCompletedTasks] = useState([]);\n  const [currentTask, setCurrentTask] = useState(null);\n  const [score, setScore] = useState(0);\n  const [gameOver, setGameOver] = useState(false);\n  const apiUrl = process.env.REACT_APP_API_BASE_URL;\n\n\n  const generateRandomTask = () => {\n    let remainingTasks = allTasks.filter(task => !completedTasks.includes(task.name));\n  \n    if (remainingTasks.length === 0) {\n      setGameOver(true);\n      return;\n    }\n  \n    const randomIndex = Math.floor(Math.random() * remainingTasks.length);\n    const newTask = remainingTasks[randomIndex];\n  \n    setCurrentTask(newTask);\n    setCompletedTasks(prevTasks => [...prevTasks, newTask.name]);\n  };\n\n  const confirmInput = async () => {\n    try {\n      const response = await axios.get(`${apiUrl}/api/get_note_data`, {\n        params: { limit: 2 }\n      });\n      const fetchedNotes = response.data;\n      \n      const isValid = fetchedNotes.some(group => {\n        const taskNotesStr = currentTask.notes.sort().join(',');\n        const groupStr = group.sort().join(',');\n        return taskNotesStr === groupStr;\n      });\n  \n      console.log(\"Fetched Notes:\", fetchedNotes);\n      console.log(\"Is Valid:\", isValid);\n  \n      if (isValid) {\n        alert(\"Correct! Moving to the next task.\");\n        setScore(prevScore => prevScore + 1);\n      } else {\n        alert(\"Incorrect. Moving to the next task.\");\n      }\n      generateRandomTask();\n    } catch (error) {\n      console.error(\"Error fetching note data:\", error);\n    }\n  };\n\n  const getScoreMessage = (score) => {\n    switch (score) {\n      case 1:\n        return \"You scored 25%, you need to work on your theory!\";\n      case 2:\n        return \"You scored 50%, not bad but keep studying!\";\n      case 3:\n        return \"You scored 75%, good work, you're nearly an expert!\";\n      case 4:\n        return \"You scored 100%, you are a music theory expert!\";\n      default:\n        return \"\";\n    }\n  };\n\n  useState(() => {\n    generateRandomTask();\n  }, []);\n\n  return (\n    <div className=\"musical-stairs-game\">\n      <BsNav />\n      <div className=\"game-container\">\n        <h1>Play the Musical Stairs Game</h1>\n        {currentTask ? (\n          <div className=\"task-container\">\n            <p>Play the following interval on the stairs: {currentTask.name}</p>\n            <div className=\"image-container\">\n              <img src={taskImages[currentTask.name]} alt={currentTask.name} className=\"task-image\" />\n            </div>\n            <div className=\"button-container\">\n              <button className=\"validate-task-btn\" onClick={confirmInput}>Confirm Answer!</button>\n            </div>\n          </div>\n        ) : (\n          <p>Loading task...</p>\n        )}\n        <p>Score: {score}</p>\n        {gameOver && (\n          <div className=\"game-over-container\">\n            <p>{getScoreMessage(score)}</p>\n            <button className=\"restart-game-btn\" onClick={() => window.location.reload()}>Restart Game</button>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default TheoryTrainer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}