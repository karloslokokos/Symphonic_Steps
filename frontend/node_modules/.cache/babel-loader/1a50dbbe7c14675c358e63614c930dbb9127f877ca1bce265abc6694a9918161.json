{"ast":null,"code":"var _jsxFileName = \"/Users/fitzpatrickcarl/my-musical-stairs-app/src/MusicVisualiser.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Score } from './Score';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MusicVisualiser() {\n  _s();\n  const fetchData = async () => {\n    try {\n      const response = await axios.get('http://localhost:5000/get_note_data');\n      console.log('Note data fetched:', response.data.notes);\n    } catch (error) {\n      console.error('Error fetching note data:', error);\n    }\n  };\n  useEffect(() => {\n    fetchData(); // Call the fetchData function when the component mounts\n  }, []); // The empty dependency array ensures it only runs once on mount\n\n  return /*#__PURE__*/_jsxDEV(Score, {\n    staves: [['G3', 'd4', 'e4', 'd4'], ['a4', 'd4', 'e4', 'd4'], ['a4', 'a4', 'b4', 'a4'], ['d4', 'e4', ['g3', 2]]]\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n_s(MusicVisualiser, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = MusicVisualiser;\nexport default MusicVisualiser;\nvar _c;\n$RefreshReg$(_c, \"MusicVisualiser\");","map":{"version":3,"names":["React","Score","jsxDEV","_jsxDEV","MusicVisualiser","_s","fetchData","response","axios","get","console","log","data","notes","error","useEffect","staves","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/fitzpatrickcarl/my-musical-stairs-app/src/MusicVisualiser.js"],"sourcesContent":["import React from 'react'\n \nimport { Score } from './Score'\n \nfunction MusicVisualiser() {\n  const fetchData = async () => {\n    try {\n      const response = await axios.get('http://localhost:5000/get_note_data');\n      console.log('Note data fetched:', response.data.notes);\n    } catch (error) {\n      console.error('Error fetching note data:', error);\n    }\n  };\n\n  useEffect(() => {\n    fetchData(); // Call the fetchData function when the component mounts\n  }, []); // The empty dependency array ensures it only runs once on mount\n\n\n  \n  return (\n    <Score\n      staves={[\n        ['G3', 'd4', 'e4', 'd4'],\n        ['a4', 'd4', 'e4', 'd4'],\n        ['a4', 'a4', 'b4', 'a4'],\n        ['d4', 'e4', ['g3', 2]],\n      ]}\n    />\n  )\n}\n\nexport default MusicVisualiser;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,SAASC,KAAK,QAAQ,SAAS;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE/B,SAASC,eAAeA,CAAA,EAAG;EAAAC,EAAA;EACzB,MAAMC,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC5B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACC,GAAG,CAAC,qCAAqC,CAAC;MACvEC,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEJ,QAAQ,CAACK,IAAI,CAACC,KAAK,CAAC;IACxD,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdJ,OAAO,CAACI,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;IACnD;EACF,CAAC;EAEDC,SAAS,CAAC,MAAM;IACdT,SAAS,CAAC,CAAC,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAIR,oBACEH,OAAA,CAACF,KAAK;IACJe,MAAM,EAAE,CACN,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,EACxB,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,EACxB,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,EACxB,CAAC,IAAI,EAAE,IAAI,EAAE,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;EACvB;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEN;AAACf,EAAA,CA1BQD,eAAe;AAAAiB,EAAA,GAAfjB,eAAe;AA4BxB,eAAeA,eAAe;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}