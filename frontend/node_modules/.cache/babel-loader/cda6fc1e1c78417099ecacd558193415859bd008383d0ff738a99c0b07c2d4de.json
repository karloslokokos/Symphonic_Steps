{"ast":null,"code":"var _jsxFileName = \"/Users/fitzpatrickcarl/my-musical-stairs-app/src/MusicVisualiser.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Vex from 'vexflow';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MusicVisualizer() {\n  _s();\n  const [noteData, setNoteData] = useState([]);\n  useEffect(() => {\n    const VF = Vex.Flow;\n    const container = document.getElementById('music-visualizer-container');\n    container.innerHTML = '';\n    if (noteData.length > 0) {\n      const formatter = new VF.Formatter().joinVoices([new VF.Voice({\n        time: '4/4'\n      })]);\n      const notes = noteData.map(note => new VF.StaveNote({\n        keys: [note],\n        duration: 'q'\n      }));\n      formatter.format([new VF.Voice().addTickables(notes)], 400);\n      const stave = new VF.Stave(10, 0, 400);\n      stave.addClef('treble').setContext(container).draw();\n      notes.forEach(note => note.setStave(stave).setContext(container).draw());\n    }\n  }, [noteData]);\n\n  // Assume setNoteData is used to update noteData somewhere in your code\n  const updateNoteData = newNoteData => {\n    setNoteData(newNoteData);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Music Visualizer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"music-visualizer-container\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n_s(MusicVisualizer, \"A9SqIwvYJAQmbQJuylu2O/Ct1EY=\");\n_c = MusicVisualizer;\nexport default MusicVisualizer;\nvar _c;\n$RefreshReg$(_c, \"MusicVisualizer\");","map":{"version":3,"names":["React","useEffect","useState","Vex","jsxDEV","_jsxDEV","MusicVisualizer","_s","noteData","setNoteData","VF","Flow","container","document","getElementById","innerHTML","length","formatter","Formatter","joinVoices","Voice","time","notes","map","note","StaveNote","keys","duration","format","addTickables","stave","Stave","addClef","setContext","draw","forEach","setStave","updateNoteData","newNoteData","children","fileName","_jsxFileName","lineNumber","columnNumber","id","_c","$RefreshReg$"],"sources":["/Users/fitzpatrickcarl/my-musical-stairs-app/src/MusicVisualiser.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Vex from 'vexflow';\n\nfunction MusicVisualizer() {\n  const [noteData, setNoteData] = useState([]);\n\n  useEffect(() => {\n    const VF = Vex.Flow;\n    const container = document.getElementById('music-visualizer-container');\n    container.innerHTML = '';\n\n    if (noteData.length > 0) {\n      const formatter = new VF.Formatter().joinVoices([new VF.Voice({ time: '4/4' })]);\n      const notes = noteData.map((note) => new VF.StaveNote({ keys: [note], duration: 'q' }));\n\n      formatter.format([new VF.Voice().addTickables(notes)], 400);\n      const stave = new VF.Stave(10, 0, 400);\n      stave.addClef('treble').setContext(container).draw();\n      notes.forEach((note) => note.setStave(stave).setContext(container).draw());\n    }\n  }, [noteData]);\n\n  // Assume setNoteData is used to update noteData somewhere in your code\n  const updateNoteData = (newNoteData) => {\n    setNoteData(newNoteData);\n  };\n\n  return (\n    <div>\n      <h1>Music Visualizer</h1>\n      <div id=\"music-visualizer-container\"></div>\n    </div>\n  );\n}\n\nexport default MusicVisualizer;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,GAAG,MAAM,SAAS;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,eAAeA,CAAA,EAAG;EAAAC,EAAA;EACzB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAE5CD,SAAS,CAAC,MAAM;IACd,MAAMS,EAAE,GAAGP,GAAG,CAACQ,IAAI;IACnB,MAAMC,SAAS,GAAGC,QAAQ,CAACC,cAAc,CAAC,4BAA4B,CAAC;IACvEF,SAAS,CAACG,SAAS,GAAG,EAAE;IAExB,IAAIP,QAAQ,CAACQ,MAAM,GAAG,CAAC,EAAE;MACvB,MAAMC,SAAS,GAAG,IAAIP,EAAE,CAACQ,SAAS,CAAC,CAAC,CAACC,UAAU,CAAC,CAAC,IAAIT,EAAE,CAACU,KAAK,CAAC;QAAEC,IAAI,EAAE;MAAM,CAAC,CAAC,CAAC,CAAC;MAChF,MAAMC,KAAK,GAAGd,QAAQ,CAACe,GAAG,CAAEC,IAAI,IAAK,IAAId,EAAE,CAACe,SAAS,CAAC;QAAEC,IAAI,EAAE,CAACF,IAAI,CAAC;QAAEG,QAAQ,EAAE;MAAI,CAAC,CAAC,CAAC;MAEvFV,SAAS,CAACW,MAAM,CAAC,CAAC,IAAIlB,EAAE,CAACU,KAAK,CAAC,CAAC,CAACS,YAAY,CAACP,KAAK,CAAC,CAAC,EAAE,GAAG,CAAC;MAC3D,MAAMQ,KAAK,GAAG,IAAIpB,EAAE,CAACqB,KAAK,CAAC,EAAE,EAAE,CAAC,EAAE,GAAG,CAAC;MACtCD,KAAK,CAACE,OAAO,CAAC,QAAQ,CAAC,CAACC,UAAU,CAACrB,SAAS,CAAC,CAACsB,IAAI,CAAC,CAAC;MACpDZ,KAAK,CAACa,OAAO,CAAEX,IAAI,IAAKA,IAAI,CAACY,QAAQ,CAACN,KAAK,CAAC,CAACG,UAAU,CAACrB,SAAS,CAAC,CAACsB,IAAI,CAAC,CAAC,CAAC;IAC5E;EACF,CAAC,EAAE,CAAC1B,QAAQ,CAAC,CAAC;;EAEd;EACA,MAAM6B,cAAc,GAAIC,WAAW,IAAK;IACtC7B,WAAW,CAAC6B,WAAW,CAAC;EAC1B,CAAC;EAED,oBACEjC,OAAA;IAAAkC,QAAA,gBACElC,OAAA;MAAAkC,QAAA,EAAI;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACzBtC,OAAA;MAAKuC,EAAE,EAAC;IAA4B;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxC,CAAC;AAEV;AAACpC,EAAA,CA9BQD,eAAe;AAAAuC,EAAA,GAAfvC,eAAe;AAgCxB,eAAeA,eAAe;AAAC,IAAAuC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}