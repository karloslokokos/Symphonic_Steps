{"ast":null,"code":"var _jsxFileName = \"/Users/fitzpatrickcarl/Documents/project-root/frontend/src/Components/TheoryTrainer.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport BsNav from '../Containers/BsNav';\nimport { Score } from './Score';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst taskToNotationMap = {\n  'Major triad': ['C4', 'E4', 'G4'],\n  // Example notation, adjust according to Score component's requirements\n  'Perfect 5th': ['C4', 'G4'],\n  'Major 3rd': ['C4', 'E4'],\n  'Perfect 4th': ['C4', 'F4'],\n  'Major 2nd': ['C4', 'D4']\n  // Add other mappings as necessary\n};\n\nconst MusicalStairsGame = () => {\n  _s();\n  const allTasks = Object.keys(taskToNotationMap);\n  const [completedTasks, setCompletedTasks] = useState([]);\n  const [currentTask, setCurrentTask] = useState('');\n  const [score, setScore] = useState(0);\n  const [gameOver, setGameOver] = useState(false);\n  useEffect(() => {\n    generateRandomTask();\n  }, []);\n  const generateRandomTask = () => {\n    if (completedTasks.length === allTasks.length) {\n      setGameOver(true);\n      return;\n    }\n    let remainingTasks = allTasks.filter(task => !completedTasks.includes(task));\n    const randomIndex = Math.floor(Math.random() * remainingTasks.length);\n    const newTask = remainingTasks[randomIndex];\n    setCompletedTasks(prevTasks => [...prevTasks, newTask]);\n    setCurrentTask(newTask);\n  };\n  const handleTaskCompleted = () => {\n    setScore(score + 1);\n    generateRandomTask();\n  };\n  const resetGame = () => {\n    setCompletedTasks([]);\n    setScore(0);\n    setGameOver(false);\n    generateRandomTask();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(BsNav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Play the Musical Stairs Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Play the following chord or interval on the stairs: \", currentTask]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Score, {\n      staves: [taskToNotationMap[currentTask]],\n      clef: \"treble\",\n      timeSignature: \"4/4\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Score: \", score]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), gameOver ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Game Over! Your score: \", score, \" out of \", completedTasks.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: resetGame,\n        children: \"Restart Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleTaskCompleted,\n      children: \"Complete Task & Generate New Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n_s(MusicalStairsGame, \"rcFhQlm8CxKIbp0J5U+K/Q2EBFY=\");\n_c = MusicalStairsGame;\nexport default MusicalStairsGame;\nvar _c;\n$RefreshReg$(_c, \"MusicalStairsGame\");","map":{"version":3,"names":["React","useState","useEffect","BsNav","Score","jsxDEV","_jsxDEV","taskToNotationMap","MusicalStairsGame","_s","allTasks","Object","keys","completedTasks","setCompletedTasks","currentTask","setCurrentTask","score","setScore","gameOver","setGameOver","generateRandomTask","length","remainingTasks","filter","task","includes","randomIndex","Math","floor","random","newTask","prevTasks","handleTaskCompleted","resetGame","children","fileName","_jsxFileName","lineNumber","columnNumber","staves","clef","timeSignature","onClick","_c","$RefreshReg$"],"sources":["/Users/fitzpatrickcarl/Documents/project-root/frontend/src/Components/TheoryTrainer.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport BsNav from '../Containers/BsNav';\nimport { Score } from './Score';\n\nconst taskToNotationMap = {\n  'Major triad': ['C4', 'E4', 'G4'], // Example notation, adjust according to Score component's requirements\n  'Perfect 5th': ['C4', 'G4'],\n  'Major 3rd': ['C4', 'E4'],\n  'Perfect 4th': ['C4', 'F4'],\n  'Major 2nd': ['C4', 'D4'],\n  // Add other mappings as necessary\n};\n\nconst MusicalStairsGame = () => {\n  const allTasks = Object.keys(taskToNotationMap);\n\n  const [completedTasks, setCompletedTasks] = useState([]);\n  const [currentTask, setCurrentTask] = useState('');\n  const [score, setScore] = useState(0);\n  const [gameOver, setGameOver] = useState(false);\n\n  useEffect(() => {\n    generateRandomTask();\n  }, []);\n\n  const generateRandomTask = () => {\n    if (completedTasks.length === allTasks.length) {\n      setGameOver(true);\n      return;\n    }\n\n    let remainingTasks = allTasks.filter(task => !completedTasks.includes(task));\n    const randomIndex = Math.floor(Math.random() * remainingTasks.length);\n    const newTask = remainingTasks[randomIndex];\n\n    setCompletedTasks((prevTasks) => [...prevTasks, newTask]);\n    setCurrentTask(newTask);\n  };\n\n  const handleTaskCompleted = () => {\n    setScore(score + 1);\n    generateRandomTask();\n  };\n\n  const resetGame = () => {\n    setCompletedTasks([]);\n    setScore(0);\n    setGameOver(false);\n    generateRandomTask();\n  };\n\n  return (\n    <div>\n      <BsNav />\n      <h1>Play the Musical Stairs Game</h1>\n      <p>Play the following chord or interval on the stairs: {currentTask}</p>\n      <Score staves={[taskToNotationMap[currentTask]]} clef=\"treble\" timeSignature=\"4/4\" />\n      <p>Score: {score}</p>\n      {gameOver ? (\n        <div>\n          <p>Game Over! Your score: {score} out of {completedTasks.length}</p>\n          <button onClick={resetGame}>Restart Game</button>\n        </div>\n      ) : (\n        <button onClick={handleTaskCompleted}>Complete Task & Generate New Task</button>\n      )}\n    </div>\n  );\n};\n\nexport default MusicalStairsGame;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}