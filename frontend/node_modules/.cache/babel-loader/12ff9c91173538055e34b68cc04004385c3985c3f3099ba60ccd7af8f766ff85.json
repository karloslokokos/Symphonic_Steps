{"ast":null,"code":"var _jsxFileName = \"/Users/fitzpatrickcarl/Documents/project-root/frontend/src/Components/TheoryTrainer.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport BsNav from '../Containers/BsNav';\nimport '../styles/TheoryTrainer.css';\nimport major2nd from '../img/major2nd.png';\nimport major3rd from '../img/major3rd.png';\nimport perfect4th from '../img/perfect4th.png';\nimport perfect5th from '../img/perfect5th.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TheoryTrainer = () => {\n  _s();\n  const allTasks = [{\n    name: 'Perfect 5th',\n    notes: ['C4', 'G4']\n  }, {\n    name: 'Major 3rd',\n    notes: ['C3', 'E3']\n  }, {\n    name: 'Perfect 4th',\n    notes: ['C4', 'F4']\n  }, {\n    name: 'Major 2nd',\n    notes: ['C4', 'D4']\n  }];\n  const taskImages = {\n    'Perfect 5th': perfect5th,\n    'Major 3rd': major3rd,\n    'Perfect 4th': perfect4th,\n    'Major 2nd': major2nd\n  };\n  const [completedTasks, setCompletedTasks] = useState([]);\n  const [currentTask, setCurrentTask] = useState(null);\n  const [score, setScore] = useState(0);\n  const [gameOver, setGameOver] = useState(false);\n  const generateRandomTask = () => {\n    let remainingTasks = allTasks.filter(task => !completedTasks.includes(task.name));\n    if (remainingTasks.length === 0) {\n      setGameOver(true);\n      return;\n    }\n    const randomIndex = Math.floor(Math.random() * remainingTasks.length);\n    const newTask = remainingTasks[randomIndex];\n    setCurrentTask(newTask);\n    setCompletedTasks(prevTasks => [...prevTasks, newTask.name]);\n  };\n  const confirmInput = async () => {\n    try {\n      const response = await axios.get('http://localhost:5000/get_note_data', {\n        params: {\n          limit: 2\n        }\n      });\n      const fetchedNotes = response.data;\n      const isValid = fetchedNotes.some(group => {\n        const taskNotesStr = currentTask.notes.sort().join(',');\n        const groupStr = group.sort().join(',');\n        return taskNotesStr === groupStr;\n      });\n      console.log(\"Fetched Notes:\", fetchedNotes);\n      console.log(\"Is Valid:\", isValid);\n      if (isValid) {\n        alert(\"Correct! Moving to the next task.\");\n        setScore(prevScore => prevScore + 1);\n      } else {\n        alert(\"Incorrect. Moving to the next task.\");\n      }\n      generateRandomTask();\n    } catch (error) {\n      console.error(\"Error fetching note data:\", error);\n    }\n  };\n  useState(() => {\n    generateRandomTask();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"musical-stairs-game\",\n    children: [/*#__PURE__*/_jsxDEV(BsNav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Play the Musical Stairs Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), currentTask ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"button-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Play the following chord or interval on the stairs: \", currentTask.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: taskImages[currentTask.name],\n          alt: currentTask.name,\n          className: \"task-image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"validate-task-btn\",\n          onClick: confirmInput,\n          children: \"Confirm Answer!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading task...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Score: \", score]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), gameOver && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-over-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Game Over! Your score: \", score, \" out of \", allTasks.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"restart-game-btn\",\n          onClick: () => generateRandomTask(),\n          children: \"Restart Game\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n};\n_s(TheoryTrainer, \"fJHQN8+6hPZFfDyh/fXvBtjH120=\");\n_c = TheoryTrainer;\nexport default TheoryTrainer;\nvar _c;\n$RefreshReg$(_c, \"TheoryTrainer\");","map":{"version":3,"names":["React","useState","axios","BsNav","major2nd","major3rd","perfect4th","perfect5th","jsxDEV","_jsxDEV","TheoryTrainer","_s","allTasks","name","notes","taskImages","completedTasks","setCompletedTasks","currentTask","setCurrentTask","score","setScore","gameOver","setGameOver","generateRandomTask","remainingTasks","filter","task","includes","length","randomIndex","Math","floor","random","newTask","prevTasks","confirmInput","response","get","params","limit","fetchedNotes","data","isValid","some","group","taskNotesStr","sort","join","groupStr","console","log","alert","prevScore","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","onClick","_c","$RefreshReg$"],"sources":["/Users/fitzpatrickcarl/Documents/project-root/frontend/src/Components/TheoryTrainer.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport BsNav from '../Containers/BsNav';\nimport '../styles/TheoryTrainer.css';\nimport major2nd from '../img/major2nd.png';\nimport major3rd from '../img/major3rd.png';\nimport perfect4th from '../img/perfect4th.png';\nimport perfect5th from '../img/perfect5th.png';\n\nconst TheoryTrainer = () => {\n  const allTasks = [\n    { name: 'Perfect 5th', notes: ['C4', 'G4'] },\n    { name: 'Major 3rd', notes: ['C3', 'E3'] },\n    { name: 'Perfect 4th', notes: ['C4', 'F4'] },\n    { name: 'Major 2nd', notes: ['C4', 'D4'] },\n  ];\n\n  const taskImages = {\n    'Perfect 5th': perfect5th,\n    'Major 3rd': major3rd,\n    'Perfect 4th': perfect4th,\n    'Major 2nd': major2nd,\n  };\n\n  const [completedTasks, setCompletedTasks] = useState([]);\n  const [currentTask, setCurrentTask] = useState(null);\n  const [score, setScore] = useState(0);\n  const [gameOver, setGameOver] = useState(false);\n\n  const generateRandomTask = () => {\n    let remainingTasks = allTasks.filter(task => !completedTasks.includes(task.name));\n  \n    if (remainingTasks.length === 0) {\n      setGameOver(true);\n      return;\n    }\n  \n    const randomIndex = Math.floor(Math.random() * remainingTasks.length);\n    const newTask = remainingTasks[randomIndex];\n  \n    setCurrentTask(newTask);\n    setCompletedTasks(prevTasks => [...prevTasks, newTask.name]);\n  };\n\n  const confirmInput = async () => {\n    try {\n      const response = await axios.get('http://localhost:5000/get_note_data', {\n        params: { limit: 2 }\n      });\n      const fetchedNotes = response.data;\n      \n      const isValid = fetchedNotes.some(group => {\n        const taskNotesStr = currentTask.notes.sort().join(',');\n        const groupStr = group.sort().join(',');\n        return taskNotesStr === groupStr;\n      });\n  \n      console.log(\"Fetched Notes:\", fetchedNotes);\n      console.log(\"Is Valid:\", isValid);\n  \n      if (isValid) {\n        alert(\"Correct! Moving to the next task.\");\n        setScore(prevScore => prevScore + 1);\n      } else {\n        alert(\"Incorrect. Moving to the next task.\");\n      }\n      generateRandomTask();\n    } catch (error) {\n      console.error(\"Error fetching note data:\", error);\n    }\n  };\n\n  useState(() => {\n    generateRandomTask();\n  }, []);\n\n  return (\n    <div className=\"musical-stairs-game\">\n      <BsNav />\n      <div className=\"game-container\">\n        <h1>Play the Musical Stairs Game</h1>\n        {currentTask ? (\n          <div className=\"button-container\">\n            <p>Play the following chord or interval on the stairs: {currentTask.name}</p>\n            <img src={taskImages[currentTask.name]} alt={currentTask.name} className=\"task-image\" />\n            <button className=\"validate-task-btn\" onClick={confirmInput}>Confirm Answer!</button>\n          </div>\n        ) : (\n          <p>Loading task...</p>\n        )}\n        <p>Score: {score}</p>\n        {gameOver && (\n          <div className=\"game-over-container\">\n            <p>Game Over! Your score: {score} out of {allTasks.length}</p>\n            <button className=\"restart-game-btn\" onClick={() => generateRandomTask()}>Restart Game</button>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default TheoryTrainer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}